# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.1

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.foundation.numerics
except Exception:
    pass

try:
    import winsdk.windows.storage.streams
except Exception:
    pass

try:
    import winsdk.windows.ui
except Exception:
    pass

try:
    import winsdk.windows.ui.core
except Exception:
    pass

try:
    import winsdk.windows.ui.input
except Exception:
    pass

class HandwritingLineHeight(enum.IntEnum):
    SMALL = 0
    MEDIUM = 1
    LARGE = 2

class InkDrawingAttributesKind(enum.IntEnum):
    DEFAULT = 0
    PENCIL = 1

class InkHighContrastAdjustment(enum.IntEnum):
    USE_SYSTEM_COLORS_WHEN_NECESSARY = 0
    USE_SYSTEM_COLORS = 1
    USE_ORIGINAL_COLORS = 2

class InkInputProcessingMode(enum.IntEnum):
    NONE = 0
    INKING = 1
    ERASING = 2

class InkInputRightDragAction(enum.IntEnum):
    LEAVE_UNPROCESSED = 0
    ALLOW_PROCESSING = 1

class InkManipulationMode(enum.IntEnum):
    INKING = 0
    ERASING = 1
    SELECTING = 2

class InkPersistenceFormat(enum.IntEnum):
    GIF_WITH_EMBEDDED_ISF = 0
    ISF = 1

class InkPresenterPredefinedConfiguration(enum.IntEnum):
    SIMPLE_SINGLE_POINTER = 0
    SIMPLE_MULTIPLE_POINTER = 1

class InkPresenterStencilKind(enum.IntEnum):
    OTHER = 0
    RULER = 1
    PROTRACTOR = 2

class InkRecognitionTarget(enum.IntEnum):
    ALL = 0
    SELECTED = 1
    RECENT = 2

class PenHandedness(enum.IntEnum):
    RIGHT = 0
    LEFT = 1

class PenTipShape(enum.IntEnum):
    CIRCLE = 0
    RECTANGLE = 1

class InkDrawingAttributes(_winrt.Object):
    ...
    size: winsdk.windows.foundation.Size
    pen_tip: PenTipShape
    ignore_pressure: _winrt.Boolean
    fit_to_curve: _winrt.Boolean
    color: winsdk.windows.ui.Color
    pen_tip_transform: winsdk.windows.foundation.numerics.Matrix3x2
    draw_as_highlighter: _winrt.Boolean
    kind: InkDrawingAttributesKind
    pencil_properties: InkDrawingAttributesPencilProperties
    ignore_tilt: _winrt.Boolean
    modeler_attributes: InkModelerAttributes
    def __init__(self, ) -> None:
        ...
    def create_for_pencil() -> InkDrawingAttributes:
        ...

class InkDrawingAttributesPencilProperties(_winrt.Object):
    ...
    opacity: _winrt.Double

class InkInputConfiguration(_winrt.Object):
    ...
    is_primary_barrel_button_input_enabled: _winrt.Boolean
    is_eraser_input_enabled: _winrt.Boolean
    is_pen_haptic_feedback_enabled: _winrt.Boolean

class InkInputProcessingConfiguration(_winrt.Object):
    ...
    right_drag_action: InkInputRightDragAction
    mode: InkInputProcessingMode

class InkManager(IInkRecognizerContainer, IInkStrokeContainer, _winrt.Object):
    ...
    mode: InkManipulationMode
    bounding_rect: winsdk.windows.foundation.Rect
    def __init__(self, ) -> None:
        ...
    def add_stroke(stroke: InkStroke) -> None:
        ...
    def can_paste_from_clipboard() -> _winrt.Boolean:
        ...
    def copy_selected_to_clipboard() -> None:
        ...
    def delete_selected() -> winsdk.windows.foundation.Rect:
        ...
    def get_recognition_results() -> winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]:
        ...
    def get_recognizers() -> winsdk.windows.foundation.collections.IVectorView[InkRecognizer]:
        ...
    def get_strokes() -> winsdk.windows.foundation.collections.IVectorView[InkStroke]:
        ...
    def load_async(input_stream: winsdk.windows.storage.streams.IInputStream) -> winsdk.windows.foundation.IAsyncActionWithProgress[_winrt.UInt64]:
        ...
    def move_selected(translation: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.Rect:
        ...
    def paste_from_clipboard(position: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.Rect:
        ...
    def process_pointer_down(pointer_point: winsdk.windows.ui.input.PointerPoint) -> None:
        ...
    def process_pointer_up(pointer_point: winsdk.windows.ui.input.PointerPoint) -> winsdk.windows.foundation.Rect:
        ...
    def process_pointer_update(pointer_point: winsdk.windows.ui.input.PointerPoint) -> _winrt.Object:
        ...
    def recognize_async(recognition_target: InkRecognitionTarget) -> winsdk.windows.foundation.IAsyncOperation[winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]]:
        ...
    def recognize_async(stroke_collection: InkStrokeContainer, recognition_target: InkRecognitionTarget) -> winsdk.windows.foundation.IAsyncOperation[winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]]:
        ...
    def save_async(output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt32, _winrt.UInt32]:
        ...
    def select_with_line(from: winsdk.windows.foundation.Point, to: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.Rect:
        ...
    def select_with_poly_line(polyline: typing.Iterable[winsdk.windows.foundation.Point]) -> winsdk.windows.foundation.Rect:
        ...
    def set_default_drawing_attributes(drawing_attributes: InkDrawingAttributes) -> None:
        ...
    def set_default_recognizer(recognizer: InkRecognizer) -> None:
        ...
    def update_recognition_results(recognition_results: winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]) -> None:
        ...

class InkModelerAttributes(_winrt.Object):
    ...
    scaling_factor: _winrt.Single
    prediction_time: winsdk.windows.foundation.TimeSpan
    use_velocity_based_pressure: _winrt.Boolean

class InkPoint(_winrt.Object):
    ...
    position: winsdk.windows.foundation.Point
    pressure: _winrt.Single
    tilt_x: _winrt.Single
    tilt_y: _winrt.Single
    timestamp: _winrt.UInt64
    def __init__(self, position: winsdk.windows.foundation.Point, pressure: _winrt.Single, tilt_x: _winrt.Single, tilt_y: _winrt.Single, timestamp: _winrt.UInt64) -> None:
        ...
    def __init__(self, position: winsdk.windows.foundation.Point, pressure: _winrt.Single) -> None:
        ...

class InkPresenter(_winrt.Object):
    ...
    stroke_container: InkStrokeContainer
    is_input_enabled: _winrt.Boolean
    input_device_types: winsdk.windows.ui.core.CoreInputDeviceTypes
    input_processing_configuration: InkInputProcessingConfiguration
    stroke_input: InkStrokeInput
    unprocessed_input: InkUnprocessedInput
    high_contrast_adjustment: InkHighContrastAdjustment
    input_configuration: InkInputConfiguration
    def activate_custom_drying() -> InkSynchronizer:
        ...
    def copy_default_drawing_attributes() -> InkDrawingAttributes:
        ...
    def set_predefined_configuration(value: InkPresenterPredefinedConfiguration) -> None:
        ...
    def update_default_drawing_attributes(value: InkDrawingAttributes) -> None:
        ...
    def add_strokes_collected(handler: winsdk.windows.foundation.TypedEventHandler[InkPresenter, InkStrokesCollectedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_strokes_collected(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_strokes_erased(handler: winsdk.windows.foundation.TypedEventHandler[InkPresenter, InkStrokesErasedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_strokes_erased(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class InkPresenterProtractor(IInkPresenterStencil, _winrt.Object):
    ...
    radius: _winrt.Double
    is_resizable: _winrt.Boolean
    is_center_marker_visible: _winrt.Boolean
    is_angle_readout_visible: _winrt.Boolean
    are_tick_marks_visible: _winrt.Boolean
    are_rays_visible: _winrt.Boolean
    accent_color: winsdk.windows.ui.Color
    transform: winsdk.windows.foundation.numerics.Matrix3x2
    is_visible: _winrt.Boolean
    foreground_color: winsdk.windows.ui.Color
    background_color: winsdk.windows.ui.Color
    kind: InkPresenterStencilKind
    def __init__(self, ink_presenter: InkPresenter) -> None:
        ...

class InkPresenterRuler(IInkPresenterStencil, _winrt.Object):
    ...
    width: _winrt.Double
    length: _winrt.Double
    is_compass_visible: _winrt.Boolean
    are_tick_marks_visible: _winrt.Boolean
    transform: winsdk.windows.foundation.numerics.Matrix3x2
    is_visible: _winrt.Boolean
    foreground_color: winsdk.windows.ui.Color
    background_color: winsdk.windows.ui.Color
    kind: InkPresenterStencilKind
    def __init__(self, ink_presenter: InkPresenter) -> None:
        ...

class InkRecognitionResult(_winrt.Object):
    ...
    bounding_rect: winsdk.windows.foundation.Rect
    def get_strokes() -> winsdk.windows.foundation.collections.IVectorView[InkStroke]:
        ...
    def get_text_candidates() -> winsdk.windows.foundation.collections.IVectorView[str]:
        ...

class InkRecognizer(_winrt.Object):
    ...
    name: str

class InkRecognizerContainer(IInkRecognizerContainer, _winrt.Object):
    ...
    def __init__(self, ) -> None:
        ...
    def get_recognizers() -> winsdk.windows.foundation.collections.IVectorView[InkRecognizer]:
        ...
    def recognize_async(stroke_collection: InkStrokeContainer, recognition_target: InkRecognitionTarget) -> winsdk.windows.foundation.IAsyncOperation[winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]]:
        ...
    def set_default_recognizer(recognizer: InkRecognizer) -> None:
        ...

class InkStroke(_winrt.Object):
    ...
    selected: _winrt.Boolean
    drawing_attributes: InkDrawingAttributes
    bounding_rect: winsdk.windows.foundation.Rect
    recognized: _winrt.Boolean
    point_transform: winsdk.windows.foundation.numerics.Matrix3x2
    stroke_started_time: typing.Optional[winsdk.windows.foundation.DateTime]
    stroke_duration: typing.Optional[winsdk.windows.foundation.TimeSpan]
    id: _winrt.UInt32
    pointer_id: _winrt.UInt32
    def clone() -> InkStroke:
        ...
    def get_ink_points() -> winsdk.windows.foundation.collections.IVectorView[InkPoint]:
        ...
    def get_rendering_segments() -> winsdk.windows.foundation.collections.IVectorView[InkStrokeRenderingSegment]:
        ...

class InkStrokeBuilder(_winrt.Object):
    ...
    def __init__(self, ) -> None:
        ...
    def append_to_stroke(pointer_point: winsdk.windows.ui.input.PointerPoint) -> winsdk.windows.ui.input.PointerPoint:
        ...
    def begin_stroke(pointer_point: winsdk.windows.ui.input.PointerPoint) -> None:
        ...
    def create_stroke(points: typing.Iterable[winsdk.windows.foundation.Point]) -> InkStroke:
        ...
    def create_stroke_from_ink_points(ink_points: typing.Iterable[InkPoint], transform: winsdk.windows.foundation.numerics.Matrix3x2) -> InkStroke:
        ...
    def create_stroke_from_ink_points(ink_points: typing.Iterable[InkPoint], transform: winsdk.windows.foundation.numerics.Matrix3x2, stroke_started_time: typing.Optional[winsdk.windows.foundation.DateTime], stroke_duration: typing.Optional[winsdk.windows.foundation.TimeSpan]) -> InkStroke:
        ...
    def end_stroke(pointer_point: winsdk.windows.ui.input.PointerPoint) -> InkStroke:
        ...
    def set_default_drawing_attributes(drawing_attributes: InkDrawingAttributes) -> None:
        ...

class InkStrokeContainer(IInkStrokeContainer, _winrt.Object):
    ...
    bounding_rect: winsdk.windows.foundation.Rect
    def __init__(self, ) -> None:
        ...
    def add_stroke(stroke: InkStroke) -> None:
        ...
    def add_strokes(strokes: typing.Iterable[InkStroke]) -> None:
        ...
    def can_paste_from_clipboard() -> _winrt.Boolean:
        ...
    def clear() -> None:
        ...
    def copy_selected_to_clipboard() -> None:
        ...
    def delete_selected() -> winsdk.windows.foundation.Rect:
        ...
    def get_recognition_results() -> winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]:
        ...
    def get_stroke_by_id(id: _winrt.UInt32) -> InkStroke:
        ...
    def get_strokes() -> winsdk.windows.foundation.collections.IVectorView[InkStroke]:
        ...
    def load_async(input_stream: winsdk.windows.storage.streams.IInputStream) -> winsdk.windows.foundation.IAsyncActionWithProgress[_winrt.UInt64]:
        ...
    def move_selected(translation: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.Rect:
        ...
    def paste_from_clipboard(position: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.Rect:
        ...
    def save_async(output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt32, _winrt.UInt32]:
        ...
    def save_async(output_stream: winsdk.windows.storage.streams.IOutputStream, ink_persistence_format: InkPersistenceFormat) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt32, _winrt.UInt32]:
        ...
    def select_with_line(from: winsdk.windows.foundation.Point, to: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.Rect:
        ...
    def select_with_poly_line(polyline: typing.Iterable[winsdk.windows.foundation.Point]) -> winsdk.windows.foundation.Rect:
        ...
    def update_recognition_results(recognition_results: winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]) -> None:
        ...

class InkStrokeInput(_winrt.Object):
    ...
    ink_presenter: InkPresenter
    def add_stroke_canceled(handler: winsdk.windows.foundation.TypedEventHandler[InkStrokeInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_stroke_canceled(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stroke_continued(handler: winsdk.windows.foundation.TypedEventHandler[InkStrokeInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_stroke_continued(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stroke_ended(handler: winsdk.windows.foundation.TypedEventHandler[InkStrokeInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_stroke_ended(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stroke_started(handler: winsdk.windows.foundation.TypedEventHandler[InkStrokeInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_stroke_started(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class InkStrokeRenderingSegment(_winrt.Object):
    ...
    bezier_control_point1: winsdk.windows.foundation.Point
    bezier_control_point2: winsdk.windows.foundation.Point
    position: winsdk.windows.foundation.Point
    pressure: _winrt.Single
    tilt_x: _winrt.Single
    tilt_y: _winrt.Single
    twist: _winrt.Single

class InkStrokesCollectedEventArgs(_winrt.Object):
    ...
    strokes: winsdk.windows.foundation.collections.IVectorView[InkStroke]

class InkStrokesErasedEventArgs(_winrt.Object):
    ...
    strokes: winsdk.windows.foundation.collections.IVectorView[InkStroke]

class InkSynchronizer(_winrt.Object):
    ...
    def begin_dry() -> winsdk.windows.foundation.collections.IVectorView[InkStroke]:
        ...
    def end_dry() -> None:
        ...

class InkUnprocessedInput(_winrt.Object):
    ...
    ink_presenter: InkPresenter
    def add_pointer_entered(handler: winsdk.windows.foundation.TypedEventHandler[InkUnprocessedInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_pointer_entered(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_pointer_exited(handler: winsdk.windows.foundation.TypedEventHandler[InkUnprocessedInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_pointer_exited(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_pointer_hovered(handler: winsdk.windows.foundation.TypedEventHandler[InkUnprocessedInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_pointer_hovered(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_pointer_lost(handler: winsdk.windows.foundation.TypedEventHandler[InkUnprocessedInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_pointer_lost(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_pointer_moved(handler: winsdk.windows.foundation.TypedEventHandler[InkUnprocessedInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_pointer_moved(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_pointer_pressed(handler: winsdk.windows.foundation.TypedEventHandler[InkUnprocessedInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_pointer_pressed(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_pointer_released(handler: winsdk.windows.foundation.TypedEventHandler[InkUnprocessedInput, winsdk.windows.ui.core.PointerEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_pointer_released(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class PenAndInkSettings(_winrt.Object):
    ...
    font_family_name: str
    handwriting_line_height: HandwritingLineHeight
    is_handwriting_directly_into_text_field_enabled: _winrt.Boolean
    is_touch_handwriting_enabled: _winrt.Boolean
    pen_handedness: PenHandedness
    user_consents_to_handwriting_telemetry_collection: _winrt.Boolean
    def get_default() -> PenAndInkSettings:
        ...
    def set_pen_handedness(value: PenHandedness) -> None:
        ...

class IInkPointFactory(_winrt.Object):
    ...
    def create_ink_point(position: winsdk.windows.foundation.Point, pressure: _winrt.Single) -> InkPoint:
        ...

class IInkPresenterRulerFactory(_winrt.Object):
    ...
    def create(ink_presenter: InkPresenter) -> InkPresenterRuler:
        ...

class IInkPresenterStencil(_winrt.Object):
    ...
    background_color: winsdk.windows.ui.Color
    foreground_color: winsdk.windows.ui.Color
    is_visible: _winrt.Boolean
    kind: InkPresenterStencilKind
    transform: winsdk.windows.foundation.numerics.Matrix3x2

class IInkRecognizerContainer(_winrt.Object):
    ...
    def get_recognizers() -> winsdk.windows.foundation.collections.IVectorView[InkRecognizer]:
        ...
    def recognize_async(stroke_collection: InkStrokeContainer, recognition_target: InkRecognitionTarget) -> winsdk.windows.foundation.IAsyncOperation[winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]]:
        ...
    def set_default_recognizer(recognizer: InkRecognizer) -> None:
        ...

class IInkStrokeContainer(_winrt.Object):
    ...
    bounding_rect: winsdk.windows.foundation.Rect
    def add_stroke(stroke: InkStroke) -> None:
        ...
    def can_paste_from_clipboard() -> _winrt.Boolean:
        ...
    def copy_selected_to_clipboard() -> None:
        ...
    def delete_selected() -> winsdk.windows.foundation.Rect:
        ...
    def get_recognition_results() -> winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]:
        ...
    def get_strokes() -> winsdk.windows.foundation.collections.IVectorView[InkStroke]:
        ...
    def load_async(input_stream: winsdk.windows.storage.streams.IInputStream) -> winsdk.windows.foundation.IAsyncActionWithProgress[_winrt.UInt64]:
        ...
    def move_selected(translation: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.Rect:
        ...
    def paste_from_clipboard(position: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.Rect:
        ...
    def save_async(output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt32, _winrt.UInt32]:
        ...
    def select_with_line(from: winsdk.windows.foundation.Point, to: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.Rect:
        ...
    def select_with_poly_line(polyline: typing.Iterable[winsdk.windows.foundation.Point]) -> winsdk.windows.foundation.Rect:
        ...
    def update_recognition_results(recognition_results: winsdk.windows.foundation.collections.IVectorView[InkRecognitionResult]) -> None:
        ...

