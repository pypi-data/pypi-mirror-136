# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.1

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.foundation.numerics
except Exception:
    pass

try:
    import winsdk.windows.graphics.directx.direct3d11
except Exception:
    pass

try:
    import winsdk.windows.media
except Exception:
    pass

try:
    import winsdk.windows.media.capture
except Exception:
    pass

try:
    import winsdk.windows.media.editing
except Exception:
    pass

try:
    import winsdk.windows.media.mediaproperties
except Exception:
    pass

try:
    import winsdk.windows.media.playback
except Exception:
    pass

try:
    import winsdk.windows.media.render
except Exception:
    pass

try:
    import winsdk.windows.media.transcoding
except Exception:
    pass

try:
    import winsdk.windows.storage.streams
except Exception:
    pass

try:
    import winsdk.windows.ui
except Exception:
    pass

class AudioEffectType(enum.IntEnum):
    OTHER = 0
    ACOUSTIC_ECHO_CANCELLATION = 1
    NOISE_SUPPRESSION = 2
    AUTOMATIC_GAIN_CONTROL = 3
    BEAM_FORMING = 4
    CONSTANT_TONE_REMOVAL = 5
    EQUALIZER = 6
    LOUDNESS_EQUALIZER = 7
    BASS_BOOST = 8
    VIRTUAL_SURROUND = 9
    VIRTUAL_HEADPHONES = 10
    SPEAKER_FILL = 11
    ROOM_CORRECTION = 12
    BASS_MANAGEMENT = 13
    ENVIRONMENTAL_EFFECTS = 14
    SPEAKER_PROTECTION = 15
    SPEAKER_COMPENSATION = 16
    DYNAMIC_RANGE_COMPRESSION = 17
    FAR_FIELD_BEAM_FORMING = 18
    DEEP_NOISE_SUPPRESSION = 19

class MediaEffectClosedReason(enum.IntEnum):
    DONE = 0
    UNKNOWN_ERROR = 1
    UNSUPPORTED_ENCODING_FORMAT = 2
    EFFECT_CURRENTLY_UNLOADED = 3

class MediaMemoryTypes(enum.IntEnum):
    GPU = 0
    CPU = 1
    GPU_AND_CPU = 2

class AudioCaptureEffectsManager(_winrt.Object):
    ...
    def get_audio_capture_effects() -> winsdk.windows.foundation.collections.IVectorView[AudioEffect]:
        ...
    def add_audio_capture_effects_changed(handler: winsdk.windows.foundation.TypedEventHandler[AudioCaptureEffectsManager, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_audio_capture_effects_changed(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class AudioEffect(_winrt.Object):
    ...
    audio_effect_type: AudioEffectType

class AudioEffectDefinition(IAudioEffectDefinition, _winrt.Object):
    ...
    activatable_class_id: str
    properties: winsdk.windows.foundation.collections.IPropertySet
    def __init__(self, activatable_class_id: str) -> None:
        ...
    def __init__(self, activatable_class_id: str, props: winsdk.windows.foundation.collections.IPropertySet) -> None:
        ...

class AudioEffectsManager(_winrt.Object):
    ...
    def create_audio_capture_effects_manager(device_id: str, category: winsdk.windows.media.capture.MediaCategory) -> AudioCaptureEffectsManager:
        ...
    def create_audio_capture_effects_manager(device_id: str, category: winsdk.windows.media.capture.MediaCategory, mode: winsdk.windows.media.AudioProcessing) -> AudioCaptureEffectsManager:
        ...
    def create_audio_render_effects_manager(device_id: str, category: winsdk.windows.media.render.AudioRenderCategory) -> AudioRenderEffectsManager:
        ...
    def create_audio_render_effects_manager(device_id: str, category: winsdk.windows.media.render.AudioRenderCategory, mode: winsdk.windows.media.AudioProcessing) -> AudioRenderEffectsManager:
        ...

class AudioRenderEffectsManager(_winrt.Object):
    ...
    effects_provider_settings_label: str
    effects_provider_thumbnail: winsdk.windows.storage.streams.IRandomAccessStreamWithContentType
    def get_audio_render_effects() -> winsdk.windows.foundation.collections.IVectorView[AudioEffect]:
        ...
    def show_settings_u_i() -> None:
        ...
    def add_audio_render_effects_changed(handler: winsdk.windows.foundation.TypedEventHandler[AudioRenderEffectsManager, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_audio_render_effects_changed(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class CompositeVideoFrameContext(_winrt.Object):
    ...
    background_frame: winsdk.windows.media.VideoFrame
    output_frame: winsdk.windows.media.VideoFrame
    surfaces_to_overlay: winsdk.windows.foundation.collections.IVectorView[winsdk.windows.graphics.directx.direct3d11.IDirect3DSurface]
    def get_overlay_for_surface(surface_to_overlay: winsdk.windows.graphics.directx.direct3d11.IDirect3DSurface) -> winsdk.windows.media.editing.MediaOverlay:
        ...

class ProcessAudioFrameContext(_winrt.Object):
    ...
    input_frame: winsdk.windows.media.AudioFrame
    output_frame: winsdk.windows.media.AudioFrame

class ProcessVideoFrameContext(_winrt.Object):
    ...
    input_frame: winsdk.windows.media.VideoFrame
    output_frame: winsdk.windows.media.VideoFrame

class VideoCompositorDefinition(IVideoCompositorDefinition, _winrt.Object):
    ...
    activatable_class_id: str
    properties: winsdk.windows.foundation.collections.IPropertySet
    def __init__(self, activatable_class_id: str) -> None:
        ...
    def __init__(self, activatable_class_id: str, props: winsdk.windows.foundation.collections.IPropertySet) -> None:
        ...

class VideoEffectDefinition(IVideoEffectDefinition, _winrt.Object):
    ...
    activatable_class_id: str
    properties: winsdk.windows.foundation.collections.IPropertySet
    def __init__(self, activatable_class_id: str) -> None:
        ...
    def __init__(self, activatable_class_id: str, props: winsdk.windows.foundation.collections.IPropertySet) -> None:
        ...

class VideoTransformEffectDefinition(IVideoEffectDefinition, _winrt.Object):
    ...
    activatable_class_id: str
    properties: winsdk.windows.foundation.collections.IPropertySet
    rotation: winsdk.windows.media.mediaproperties.MediaRotation
    processing_algorithm: winsdk.windows.media.transcoding.MediaVideoProcessingAlgorithm
    padding_color: winsdk.windows.ui.Color
    output_size: winsdk.windows.foundation.Size
    mirror: winsdk.windows.media.mediaproperties.MediaMirroringOptions
    crop_rectangle: winsdk.windows.foundation.Rect
    spherical_projection: VideoTransformSphericalProjection
    def __init__(self, ) -> None:
        ...

class VideoTransformSphericalProjection(_winrt.Object):
    ...
    view_orientation: winsdk.windows.foundation.numerics.Quaternion
    projection_mode: winsdk.windows.media.playback.SphericalVideoProjectionMode
    is_enabled: _winrt.Boolean
    horizontal_field_of_view_in_degrees: _winrt.Double
    frame_format: winsdk.windows.media.mediaproperties.SphericalVideoFrameFormat

class IAudioEffectDefinition(_winrt.Object):
    ...
    activatable_class_id: str
    properties: winsdk.windows.foundation.collections.IPropertySet

class IBasicAudioEffect(winsdk.windows.media.IMediaExtension, _winrt.Object):
    ...
    supported_encoding_properties: winsdk.windows.foundation.collections.IVectorView[winsdk.windows.media.mediaproperties.AudioEncodingProperties]
    use_input_frame_for_output: _winrt.Boolean
    def close(reason: MediaEffectClosedReason) -> None:
        ...
    def discard_queued_frames() -> None:
        ...
    def process_frame(context: ProcessAudioFrameContext) -> None:
        ...
    def set_encoding_properties(encoding_properties: winsdk.windows.media.mediaproperties.AudioEncodingProperties) -> None:
        ...
    def set_properties(configuration: winsdk.windows.foundation.collections.IPropertySet) -> None:
        ...

class IBasicVideoEffect(winsdk.windows.media.IMediaExtension, _winrt.Object):
    ...
    is_read_only: _winrt.Boolean
    supported_encoding_properties: winsdk.windows.foundation.collections.IVectorView[winsdk.windows.media.mediaproperties.VideoEncodingProperties]
    supported_memory_types: MediaMemoryTypes
    time_independent: _winrt.Boolean
    def close(reason: MediaEffectClosedReason) -> None:
        ...
    def discard_queued_frames() -> None:
        ...
    def process_frame(context: ProcessVideoFrameContext) -> None:
        ...
    def set_encoding_properties(encoding_properties: winsdk.windows.media.mediaproperties.VideoEncodingProperties, device: winsdk.windows.graphics.directx.direct3d11.IDirect3DDevice) -> None:
        ...
    def set_properties(configuration: winsdk.windows.foundation.collections.IPropertySet) -> None:
        ...

class IVideoCompositor(winsdk.windows.media.IMediaExtension, _winrt.Object):
    ...
    time_independent: _winrt.Boolean
    def close(reason: MediaEffectClosedReason) -> None:
        ...
    def composite_frame(context: CompositeVideoFrameContext) -> None:
        ...
    def discard_queued_frames() -> None:
        ...
    def set_encoding_properties(background_properties: winsdk.windows.media.mediaproperties.VideoEncodingProperties, device: winsdk.windows.graphics.directx.direct3d11.IDirect3DDevice) -> None:
        ...
    def set_properties(configuration: winsdk.windows.foundation.collections.IPropertySet) -> None:
        ...

class IVideoCompositorDefinition(_winrt.Object):
    ...
    activatable_class_id: str
    properties: winsdk.windows.foundation.collections.IPropertySet

class IVideoEffectDefinition(_winrt.Object):
    ...
    activatable_class_id: str
    properties: winsdk.windows.foundation.collections.IPropertySet

