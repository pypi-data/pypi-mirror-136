# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.1

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

class MessageDialogOptions(enum.IntFlag):
    NONE = 0
    ACCEPT_USER_INPUT_AFTER_DELAY = 0x1

class Placement(enum.IntEnum):
    DEFAULT = 0
    ABOVE = 1
    BELOW = 2
    LEFT = 3
    RIGHT = 4

class MessageDialog(_winrt.Object):
    ...
    title: str
    options: MessageDialogOptions
    default_command_index: _winrt.UInt32
    content: str
    cancel_command_index: _winrt.UInt32
    commands: winsdk.windows.foundation.collections.IVector[IUICommand]
    def __init__(self, content: str) -> None:
        ...
    def __init__(self, content: str, title: str) -> None:
        ...
    def show_async() -> winsdk.windows.foundation.IAsyncOperation[IUICommand]:
        ...

class PopupMenu(_winrt.Object):
    ...
    commands: winsdk.windows.foundation.collections.IVector[IUICommand]
    def __init__(self, ) -> None:
        ...
    def show_async(invocation_point: winsdk.windows.foundation.Point) -> winsdk.windows.foundation.IAsyncOperation[IUICommand]:
        ...
    def show_for_selection_async(selection: winsdk.windows.foundation.Rect) -> winsdk.windows.foundation.IAsyncOperation[IUICommand]:
        ...
    def show_for_selection_async(selection: winsdk.windows.foundation.Rect, preferred_placement: Placement) -> winsdk.windows.foundation.IAsyncOperation[IUICommand]:
        ...

class UICommand(IUICommand, _winrt.Object):
    ...
    label: str
    invoked: UICommandInvokedHandler
    id: _winrt.Object
    def __init__(self, label: str) -> None:
        ...
    def __init__(self, label: str, action: UICommandInvokedHandler) -> None:
        ...
    def __init__(self, label: str, action: UICommandInvokedHandler, command_id: _winrt.Object) -> None:
        ...
    def __init__(self, ) -> None:
        ...

class UICommandSeparator(IUICommand, _winrt.Object):
    ...
    label: str
    invoked: UICommandInvokedHandler
    id: _winrt.Object
    def __init__(self, ) -> None:
        ...

class IUICommand(_winrt.Object):
    ...
    id: _winrt.Object
    invoked: UICommandInvokedHandler
    label: str

UICommandInvokedHandler = typing.Callable[[IUICommand], None]

