# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.1

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.storage.streams
except Exception:
    pass

class PlayToConnectionError(enum.IntEnum):
    NONE = 0
    DEVICE_NOT_RESPONDING = 1
    DEVICE_ERROR = 2
    DEVICE_LOCKED = 3
    PROTECTED_PLAYBACK_FAILED = 4

class PlayToConnectionState(enum.IntEnum):
    DISCONNECTED = 0
    CONNECTED = 1
    RENDERING = 2

class CurrentTimeChangeRequestedEventArgs(_winrt.Object):
    ...
    time: winsdk.windows.foundation.TimeSpan

class MuteChangeRequestedEventArgs(_winrt.Object):
    ...
    mute: _winrt.Boolean

class PlayToConnection(_winrt.Object):
    ...
    state: PlayToConnectionState
    def add_error(handler: winsdk.windows.foundation.TypedEventHandler[PlayToConnection, PlayToConnectionErrorEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_error(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_state_changed(handler: winsdk.windows.foundation.TypedEventHandler[PlayToConnection, PlayToConnectionStateChangedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_state_changed(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_transferred(handler: winsdk.windows.foundation.TypedEventHandler[PlayToConnection, PlayToConnectionTransferredEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_transferred(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class PlayToConnectionErrorEventArgs(_winrt.Object):
    ...
    code: PlayToConnectionError
    message: str

class PlayToConnectionStateChangedEventArgs(_winrt.Object):
    ...
    current_state: PlayToConnectionState
    previous_state: PlayToConnectionState

class PlayToConnectionTransferredEventArgs(_winrt.Object):
    ...
    current_source: PlayToSource
    previous_source: PlayToSource

class PlayToManager(_winrt.Object):
    ...
    default_source_selection: _winrt.Boolean
    def get_for_current_view() -> PlayToManager:
        ...
    def show_play_to_u_i() -> None:
        ...
    def add_source_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToManager, PlayToSourceRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_selected(handler: winsdk.windows.foundation.TypedEventHandler[PlayToManager, PlayToSourceSelectedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_selected(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class PlayToReceiver(_winrt.Object):
    ...
    supports_video: _winrt.Boolean
    supports_image: _winrt.Boolean
    supports_audio: _winrt.Boolean
    friendly_name: str
    properties: winsdk.windows.foundation.collections.IPropertySet
    def __init__(self, ) -> None:
        ...
    def notify_duration_change(duration: winsdk.windows.foundation.TimeSpan) -> None:
        ...
    def notify_ended() -> None:
        ...
    def notify_error() -> None:
        ...
    def notify_loaded_metadata() -> None:
        ...
    def notify_paused() -> None:
        ...
    def notify_playing() -> None:
        ...
    def notify_rate_change(rate: _winrt.Double) -> None:
        ...
    def notify_seeked() -> None:
        ...
    def notify_seeking() -> None:
        ...
    def notify_stopped() -> None:
        ...
    def notify_time_update(current_time: winsdk.windows.foundation.TimeSpan) -> None:
        ...
    def notify_volume_change(volume: _winrt.Double, mute: _winrt.Boolean) -> None:
        ...
    def start_async() -> winsdk.windows.foundation.IAsyncAction:
        ...
    def stop_async() -> winsdk.windows.foundation.IAsyncAction:
        ...
    def add_current_time_change_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToReceiver, CurrentTimeChangeRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_current_time_change_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_mute_change_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToReceiver, MuteChangeRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_mute_change_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_pause_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToReceiver, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_pause_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_play_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToReceiver, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_play_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_playback_rate_change_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToReceiver, PlaybackRateChangeRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_playback_rate_change_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_change_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToReceiver, SourceChangeRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_change_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stop_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToReceiver, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_stop_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_time_update_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToReceiver, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_time_update_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_volume_change_requested(handler: winsdk.windows.foundation.TypedEventHandler[PlayToReceiver, VolumeChangeRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_volume_change_requested(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class PlayToSource(_winrt.Object):
    ...
    next: PlayToSource
    connection: PlayToConnection
    preferred_source_uri: winsdk.windows.foundation.Uri
    def play_next() -> None:
        ...

class PlayToSourceDeferral(_winrt.Object):
    ...
    def complete() -> None:
        ...

class PlayToSourceRequest(_winrt.Object):
    ...
    deadline: winsdk.windows.foundation.DateTime
    def display_error_string(error_string: str) -> None:
        ...
    def get_deferral() -> PlayToSourceDeferral:
        ...
    def set_source(value: PlayToSource) -> None:
        ...

class PlayToSourceRequestedEventArgs(_winrt.Object):
    ...
    source_request: PlayToSourceRequest

class PlayToSourceSelectedEventArgs(_winrt.Object):
    ...
    friendly_name: str
    icon: winsdk.windows.storage.streams.IRandomAccessStreamWithContentType
    supports_audio: _winrt.Boolean
    supports_image: _winrt.Boolean
    supports_video: _winrt.Boolean

class PlaybackRateChangeRequestedEventArgs(_winrt.Object):
    ...
    rate: _winrt.Double

class SourceChangeRequestedEventArgs(_winrt.Object):
    ...
    album: str
    author: str
    date: typing.Optional[winsdk.windows.foundation.DateTime]
    description: str
    genre: str
    properties: winsdk.windows.foundation.collections.IMapView[str, _winrt.Object]
    rating: typing.Optional[_winrt.UInt32]
    stream: winsdk.windows.storage.streams.IRandomAccessStreamWithContentType
    thumbnail: winsdk.windows.storage.streams.IRandomAccessStreamReference
    title: str

class VolumeChangeRequestedEventArgs(_winrt.Object):
    ...
    volume: _winrt.Double

