# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.1

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.media.core
except Exception:
    pass

try:
    import winsdk.windows.media.mediaproperties
except Exception:
    pass

try:
    import winsdk.windows.storage
except Exception:
    pass

try:
    import winsdk.windows.storage.streams
except Exception:
    pass

class MediaVideoProcessingAlgorithm(enum.IntEnum):
    DEFAULT = 0
    MRF_CRF444 = 1

class TranscodeFailureReason(enum.IntEnum):
    NONE = 0
    UNKNOWN = 1
    INVALID_PROFILE = 2
    CODEC_NOT_FOUND = 3

class MediaTranscoder(_winrt.Object):
    ...
    trim_stop_time: winsdk.windows.foundation.TimeSpan
    trim_start_time: winsdk.windows.foundation.TimeSpan
    hardware_acceleration_enabled: _winrt.Boolean
    always_reencode: _winrt.Boolean
    video_processing_algorithm: MediaVideoProcessingAlgorithm
    def __init__(self, ) -> None:
        ...
    def add_audio_effect(activatable_class_id: str) -> None:
        ...
    def add_audio_effect(activatable_class_id: str, effect_required: _winrt.Boolean, configuration: winsdk.windows.foundation.collections.IPropertySet) -> None:
        ...
    def add_video_effect(activatable_class_id: str) -> None:
        ...
    def add_video_effect(activatable_class_id: str, effect_required: _winrt.Boolean, configuration: winsdk.windows.foundation.collections.IPropertySet) -> None:
        ...
    def clear_effects() -> None:
        ...
    def prepare_file_transcode_async(source: winsdk.windows.storage.IStorageFile, destination: winsdk.windows.storage.IStorageFile, profile: winsdk.windows.media.mediaproperties.MediaEncodingProfile) -> winsdk.windows.foundation.IAsyncOperation[PrepareTranscodeResult]:
        ...
    def prepare_media_stream_source_transcode_async(source: winsdk.windows.media.core.IMediaSource, destination: winsdk.windows.storage.streams.IRandomAccessStream, profile: winsdk.windows.media.mediaproperties.MediaEncodingProfile) -> winsdk.windows.foundation.IAsyncOperation[PrepareTranscodeResult]:
        ...
    def prepare_stream_transcode_async(source: winsdk.windows.storage.streams.IRandomAccessStream, destination: winsdk.windows.storage.streams.IRandomAccessStream, profile: winsdk.windows.media.mediaproperties.MediaEncodingProfile) -> winsdk.windows.foundation.IAsyncOperation[PrepareTranscodeResult]:
        ...

class PrepareTranscodeResult(_winrt.Object):
    ...
    can_transcode: _winrt.Boolean
    failure_reason: TranscodeFailureReason
    def transcode_async() -> winsdk.windows.foundation.IAsyncActionWithProgress[_winrt.Double]:
        ...

