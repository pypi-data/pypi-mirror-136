# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.1

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

class JsonErrorStatus(enum.IntEnum):
    UNKNOWN = 0
    INVALID_JSON_STRING = 1
    INVALID_JSON_NUMBER = 2
    JSON_VALUE_NOT_FOUND = 3
    IMPLEMENTATION_LIMIT = 4

class JsonValueType(enum.IntEnum):
    NULL = 0
    BOOLEAN = 1
    NUMBER = 2
    STRING = 3
    ARRAY = 4
    OBJECT = 5

class JsonArray(IJsonValue, winsdk.windows.foundation.collections.IVector[IJsonValue], winsdk.windows.foundation.collections.IIterable[IJsonValue], winsdk.windows.foundation.IStringable, _winrt.Object):
    ...
    value_type: JsonValueType
    size: _winrt.UInt32
    def __init__(self, ) -> None:
        ...
    def append(value: IJsonValue) -> None:
        ...
    def clear() -> None:
        ...
    def first() -> winsdk.windows.foundation.collections.IIterator[IJsonValue]:
        ...
    def get_array() -> JsonArray:
        ...
    def get_array_at(index: _winrt.UInt32) -> JsonArray:
        ...
    def get_at(index: _winrt.UInt32) -> IJsonValue:
        ...
    def get_boolean() -> _winrt.Boolean:
        ...
    def get_boolean_at(index: _winrt.UInt32) -> _winrt.Boolean:
        ...
    def get_many(start_index: _winrt.UInt32, items_size: _winrt.UInt32) -> typing.Tuple[_winrt.UInt32, typing.List[IJsonValue]]:
        ...
    def get_number() -> _winrt.Double:
        ...
    def get_number_at(index: _winrt.UInt32) -> _winrt.Double:
        ...
    def get_object() -> JsonObject:
        ...
    def get_object_at(index: _winrt.UInt32) -> JsonObject:
        ...
    def get_string() -> str:
        ...
    def get_string_at(index: _winrt.UInt32) -> str:
        ...
    def get_view() -> winsdk.windows.foundation.collections.IVectorView[IJsonValue]:
        ...
    def index_of(value: IJsonValue) -> typing.Tuple[_winrt.Boolean, _winrt.UInt32]:
        ...
    def insert_at(index: _winrt.UInt32, value: IJsonValue) -> None:
        ...
    def parse(input: str) -> JsonArray:
        ...
    def remove_at(index: _winrt.UInt32) -> None:
        ...
    def remove_at_end() -> None:
        ...
    def replace_all(items: typing.Sequence[IJsonValue]) -> None:
        ...
    def set_at(index: _winrt.UInt32, value: IJsonValue) -> None:
        ...
    def stringify() -> str:
        ...
    def to_string() -> str:
        ...
    def try_parse(input: str) -> typing.Tuple[_winrt.Boolean, JsonArray]:
        ...

class JsonError(_winrt.Object):
    ...
    def get_json_status(hresult: _winrt.Int32) -> JsonErrorStatus:
        ...

class JsonObject(IJsonValue, winsdk.windows.foundation.collections.IMap[str, IJsonValue], winsdk.windows.foundation.collections.IIterable[winsdk.windows.foundation.collections.IKeyValuePair[str, IJsonValue]], winsdk.windows.foundation.IStringable, _winrt.Object):
    ...
    value_type: JsonValueType
    size: _winrt.UInt32
    def __init__(self, ) -> None:
        ...
    def clear() -> None:
        ...
    def first() -> winsdk.windows.foundation.collections.IIterator[winsdk.windows.foundation.collections.IKeyValuePair[str, IJsonValue]]:
        ...
    def get_array() -> JsonArray:
        ...
    def get_boolean() -> _winrt.Boolean:
        ...
    def get_named_array(name: str) -> JsonArray:
        ...
    def get_named_array(name: str, default_value: JsonArray) -> JsonArray:
        ...
    def get_named_boolean(name: str) -> _winrt.Boolean:
        ...
    def get_named_boolean(name: str, default_value: _winrt.Boolean) -> _winrt.Boolean:
        ...
    def get_named_number(name: str) -> _winrt.Double:
        ...
    def get_named_number(name: str, default_value: _winrt.Double) -> _winrt.Double:
        ...
    def get_named_object(name: str) -> JsonObject:
        ...
    def get_named_object(name: str, default_value: JsonObject) -> JsonObject:
        ...
    def get_named_string(name: str) -> str:
        ...
    def get_named_string(name: str, default_value: str) -> str:
        ...
    def get_named_value(name: str) -> JsonValue:
        ...
    def get_named_value(name: str, default_value: JsonValue) -> JsonValue:
        ...
    def get_number() -> _winrt.Double:
        ...
    def get_object() -> JsonObject:
        ...
    def get_string() -> str:
        ...
    def get_view() -> winsdk.windows.foundation.collections.IMapView[str, IJsonValue]:
        ...
    def has_key(key: str) -> _winrt.Boolean:
        ...
    def insert(key: str, value: IJsonValue) -> _winrt.Boolean:
        ...
    def lookup(key: str) -> IJsonValue:
        ...
    def parse(input: str) -> JsonObject:
        ...
    def remove(key: str) -> None:
        ...
    def set_named_value(name: str, value: IJsonValue) -> None:
        ...
    def stringify() -> str:
        ...
    def to_string() -> str:
        ...
    def try_parse(input: str) -> typing.Tuple[_winrt.Boolean, JsonObject]:
        ...

class JsonValue(IJsonValue, winsdk.windows.foundation.IStringable, _winrt.Object):
    ...
    value_type: JsonValueType
    def create_boolean_value(input: _winrt.Boolean) -> JsonValue:
        ...
    def create_null_value() -> JsonValue:
        ...
    def create_number_value(input: _winrt.Double) -> JsonValue:
        ...
    def create_string_value(input: str) -> JsonValue:
        ...
    def get_array() -> JsonArray:
        ...
    def get_boolean() -> _winrt.Boolean:
        ...
    def get_number() -> _winrt.Double:
        ...
    def get_object() -> JsonObject:
        ...
    def get_string() -> str:
        ...
    def parse(input: str) -> JsonValue:
        ...
    def stringify() -> str:
        ...
    def to_string() -> str:
        ...
    def try_parse(input: str) -> typing.Tuple[_winrt.Boolean, JsonValue]:
        ...

class IJsonValue(_winrt.Object):
    ...
    value_type: JsonValueType
    def get_array() -> JsonArray:
        ...
    def get_boolean() -> _winrt.Boolean:
        ...
    def get_number() -> _winrt.Double:
        ...
    def get_object() -> JsonObject:
        ...
    def get_string() -> str:
        ...
    def stringify() -> str:
        ...

