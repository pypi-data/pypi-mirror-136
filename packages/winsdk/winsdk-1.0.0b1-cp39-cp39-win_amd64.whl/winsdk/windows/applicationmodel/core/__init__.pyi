# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.1

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.applicationmodel
except Exception:
    pass

try:
    import winsdk.windows.applicationmodel.activation
except Exception:
    pass

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.system
except Exception:
    pass

try:
    import winsdk.windows.ui.core
except Exception:
    pass

class AppRestartFailureReason(enum.IntEnum):
    RESTART_PENDING = 0
    NOT_IN_FOREGROUND = 1
    INVALID_USER = 2
    OTHER = 3

class AppListEntry(_winrt.Object):
    ...
    display_info: winsdk.windows.applicationmodel.AppDisplayInfo
    app_user_model_id: str
    app_info: winsdk.windows.applicationmodel.AppInfo
    def launch_async() -> winsdk.windows.foundation.IAsyncOperation[_winrt.Boolean]:
        ...
    def launch_for_user_async(user: winsdk.windows.system.User) -> winsdk.windows.foundation.IAsyncOperation[_winrt.Boolean]:
        ...

class CoreApplication(_winrt.Object):
    ...
    id: str
    properties: winsdk.windows.foundation.collections.IPropertySet
    main_view: CoreApplicationView
    views: winsdk.windows.foundation.collections.IVectorView[CoreApplicationView]
    def create_new_view() -> CoreApplicationView:
        ...
    def create_new_view(view_source: IFrameworkViewSource) -> CoreApplicationView:
        ...
    def create_new_view(runtime_type: str, entry_point: str) -> CoreApplicationView:
        ...
    def decrement_application_use_count() -> None:
        ...
    def enable_prelaunch(value: _winrt.Boolean) -> None:
        ...
    def exit() -> None:
        ...
    def get_current_view() -> CoreApplicationView:
        ...
    def increment_application_use_count() -> None:
        ...
    def request_restart_async(launch_arguments: str) -> winsdk.windows.foundation.IAsyncOperation[AppRestartFailureReason]:
        ...
    def request_restart_for_user_async(user: winsdk.windows.system.User, launch_arguments: str) -> winsdk.windows.foundation.IAsyncOperation[AppRestartFailureReason]:
        ...
    def run(view_source: IFrameworkViewSource) -> None:
        ...
    def run_with_activation_factories(activation_factory_callback: winsdk.windows.foundation.IGetActivationFactory) -> None:
        ...
    def add_unhandled_error_detected(handler: winsdk.windows.foundation.EventHandler[UnhandledErrorDetectedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_unhandled_error_detected(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_exiting(handler: winsdk.windows.foundation.EventHandler[_winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_exiting(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_background_activated(handler: winsdk.windows.foundation.EventHandler[winsdk.windows.applicationmodel.activation.BackgroundActivatedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_background_activated(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_entered_background(handler: winsdk.windows.foundation.EventHandler[winsdk.windows.applicationmodel.EnteredBackgroundEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_entered_background(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_leaving_background(handler: winsdk.windows.foundation.EventHandler[winsdk.windows.applicationmodel.LeavingBackgroundEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_leaving_background(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_resuming(handler: winsdk.windows.foundation.EventHandler[_winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_resuming(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_suspending(handler: winsdk.windows.foundation.EventHandler[winsdk.windows.applicationmodel.SuspendingEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_suspending(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class CoreApplicationView(_winrt.Object):
    ...
    core_window: winsdk.windows.ui.core.CoreWindow
    is_hosted: _winrt.Boolean
    is_main: _winrt.Boolean
    dispatcher: winsdk.windows.ui.core.CoreDispatcher
    is_component: _winrt.Boolean
    title_bar: CoreApplicationViewTitleBar
    properties: winsdk.windows.foundation.collections.IPropertySet
    dispatcher_queue: winsdk.windows.system.DispatcherQueue
    def add_activated(handler: winsdk.windows.foundation.TypedEventHandler[CoreApplicationView, winsdk.windows.applicationmodel.activation.IActivatedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_activated(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_hosted_view_closing(handler: winsdk.windows.foundation.TypedEventHandler[CoreApplicationView, HostedViewClosingEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_hosted_view_closing(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class CoreApplicationViewTitleBar(_winrt.Object):
    ...
    extend_view_into_title_bar: _winrt.Boolean
    height: _winrt.Double
    is_visible: _winrt.Boolean
    system_overlay_left_inset: _winrt.Double
    system_overlay_right_inset: _winrt.Double
    def add_is_visible_changed(handler: winsdk.windows.foundation.TypedEventHandler[CoreApplicationViewTitleBar, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_is_visible_changed(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_layout_metrics_changed(handler: winsdk.windows.foundation.TypedEventHandler[CoreApplicationViewTitleBar, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_layout_metrics_changed(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class HostedViewClosingEventArgs(_winrt.Object):
    ...
    def get_deferral() -> winsdk.windows.foundation.Deferral:
        ...

class UnhandledError(_winrt.Object):
    ...
    handled: _winrt.Boolean
    def propagate() -> None:
        ...

class UnhandledErrorDetectedEventArgs(_winrt.Object):
    ...
    unhandled_error: UnhandledError

class ICoreApplicationUnhandledError(_winrt.Object):
    ...
    def add_unhandled_error_detected(handler: winsdk.windows.foundation.EventHandler[UnhandledErrorDetectedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_unhandled_error_detected(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class IFrameworkView(_winrt.Object):
    ...
    def initialize(application_view: CoreApplicationView) -> None:
        ...
    def load(entry_point: str) -> None:
        ...
    def run() -> None:
        ...
    def set_window(window: winsdk.windows.ui.core.CoreWindow) -> None:
        ...
    def uninitialize() -> None:
        ...

class IFrameworkViewSource(_winrt.Object):
    ...
    def create_view() -> IFrameworkView:
        ...

