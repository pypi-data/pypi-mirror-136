# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.1

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

class VibrationAccessStatus(enum.IntEnum):
    ALLOWED = 0
    DENIED_BY_USER = 1
    DENIED_BY_SYSTEM = 2
    DENIED_BY_ENERGY_SAVER = 3

class KnownSimpleHapticsControllerWaveforms(_winrt.Object):
    ...
    buzz_continuous: _winrt.UInt16
    click: _winrt.UInt16
    press: _winrt.UInt16
    release: _winrt.UInt16
    rumble_continuous: _winrt.UInt16
    brush_continuous: _winrt.UInt16
    chisel_marker_continuous: _winrt.UInt16
    eraser_continuous: _winrt.UInt16
    error: _winrt.UInt16
    galaxy_pen_continuous: _winrt.UInt16
    hover: _winrt.UInt16
    ink_continuous: _winrt.UInt16
    marker_continuous: _winrt.UInt16
    pencil_continuous: _winrt.UInt16
    success: _winrt.UInt16

class SimpleHapticsController(_winrt.Object):
    ...
    id: str
    is_intensity_supported: _winrt.Boolean
    is_play_count_supported: _winrt.Boolean
    is_play_duration_supported: _winrt.Boolean
    is_replay_pause_interval_supported: _winrt.Boolean
    supported_feedback: winsdk.windows.foundation.collections.IVectorView[SimpleHapticsControllerFeedback]
    def send_haptic_feedback(feedback: SimpleHapticsControllerFeedback) -> None:
        ...
    def send_haptic_feedback(feedback: SimpleHapticsControllerFeedback, intensity: _winrt.Double) -> None:
        ...
    def send_haptic_feedback_for_duration(feedback: SimpleHapticsControllerFeedback, intensity: _winrt.Double, play_duration: winsdk.windows.foundation.TimeSpan) -> None:
        ...
    def send_haptic_feedback_for_play_count(feedback: SimpleHapticsControllerFeedback, intensity: _winrt.Double, play_count: _winrt.Int32, replay_pause_interval: winsdk.windows.foundation.TimeSpan) -> None:
        ...
    def stop_feedback() -> None:
        ...

class SimpleHapticsControllerFeedback(_winrt.Object):
    ...
    duration: winsdk.windows.foundation.TimeSpan
    waveform: _winrt.UInt16

class VibrationDevice(_winrt.Object):
    ...
    id: str
    simple_haptics_controller: SimpleHapticsController
    def find_all_async() -> winsdk.windows.foundation.IAsyncOperation[winsdk.windows.foundation.collections.IVectorView[VibrationDevice]]:
        ...
    def from_id_async(device_id: str) -> winsdk.windows.foundation.IAsyncOperation[VibrationDevice]:
        ...
    def get_default_async() -> winsdk.windows.foundation.IAsyncOperation[VibrationDevice]:
        ...
    def get_device_selector() -> str:
        ...
    def request_access_async() -> winsdk.windows.foundation.IAsyncOperation[VibrationAccessStatus]:
        ...

