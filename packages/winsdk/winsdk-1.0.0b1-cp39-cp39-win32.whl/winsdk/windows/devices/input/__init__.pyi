# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.1

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.devices.haptics
except Exception:
    pass

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

class PointerDeviceType(enum.IntEnum):
    TOUCH = 0
    PEN = 1
    MOUSE = 2

class MouseDelta:
    x: _winrt.Int32
    y: _winrt.Int32
    def __init__(self, x: _winrt.Int32, y: _winrt.Int32) -> None: ...

class PointerDeviceUsage:
    usage_page: _winrt.UInt32
    usage: _winrt.UInt32
    min_logical: _winrt.Int32
    max_logical: _winrt.Int32
    min_physical: _winrt.Int32
    max_physical: _winrt.Int32
    unit: _winrt.UInt32
    physical_multiplier: _winrt.Single
    def __init__(self, usage_page: _winrt.UInt32, usage: _winrt.UInt32, min_logical: _winrt.Int32, max_logical: _winrt.Int32, min_physical: _winrt.Int32, max_physical: _winrt.Int32, unit: _winrt.UInt32, physical_multiplier: _winrt.Single) -> None: ...

class KeyboardCapabilities(_winrt.Object):
    ...
    keyboard_present: _winrt.Int32
    def __init__(self, ) -> None:
        ...

class MouseCapabilities(_winrt.Object):
    ...
    horizontal_wheel_present: _winrt.Int32
    mouse_present: _winrt.Int32
    number_of_buttons: _winrt.UInt32
    swap_buttons: _winrt.Int32
    vertical_wheel_present: _winrt.Int32
    def __init__(self, ) -> None:
        ...

class MouseDevice(_winrt.Object):
    ...
    def get_for_current_view() -> MouseDevice:
        ...
    def add_mouse_moved(handler: winsdk.windows.foundation.TypedEventHandler[MouseDevice, MouseEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_mouse_moved(cookie: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class MouseEventArgs(_winrt.Object):
    ...
    mouse_delta: MouseDelta

class PenButtonListener(_winrt.Object):
    ...
    def get_default() -> PenButtonListener:
        ...
    def is_supported() -> _winrt.Boolean:
        ...
    def add_is_supported_changed(handler: winsdk.windows.foundation.TypedEventHandler[PenButtonListener, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_is_supported_changed(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_tail_button_clicked(handler: winsdk.windows.foundation.TypedEventHandler[PenButtonListener, PenTailButtonClickedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_tail_button_clicked(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_tail_button_double_clicked(handler: winsdk.windows.foundation.TypedEventHandler[PenButtonListener, PenTailButtonDoubleClickedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_tail_button_double_clicked(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_tail_button_long_pressed(handler: winsdk.windows.foundation.TypedEventHandler[PenButtonListener, PenTailButtonLongPressedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_tail_button_long_pressed(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class PenDevice(_winrt.Object):
    ...
    pen_id: uuid.UUID
    simple_haptics_controller: winsdk.windows.devices.haptics.SimpleHapticsController
    def get_from_pointer_id(pointer_id: _winrt.UInt32) -> PenDevice:
        ...

class PenDockListener(_winrt.Object):
    ...
    def get_default() -> PenDockListener:
        ...
    def is_supported() -> _winrt.Boolean:
        ...
    def add_docked(handler: winsdk.windows.foundation.TypedEventHandler[PenDockListener, PenDockedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_docked(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_is_supported_changed(handler: winsdk.windows.foundation.TypedEventHandler[PenDockListener, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_is_supported_changed(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_undocked(handler: winsdk.windows.foundation.TypedEventHandler[PenDockListener, PenUndockedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken:
        ...
    def remove_undocked(token: winsdk.windows.foundation.EventRegistrationToken) -> None:
        ...

class PenDockedEventArgs(_winrt.Object):
    ...

class PenTailButtonClickedEventArgs(_winrt.Object):
    ...

class PenTailButtonDoubleClickedEventArgs(_winrt.Object):
    ...

class PenTailButtonLongPressedEventArgs(_winrt.Object):
    ...

class PenUndockedEventArgs(_winrt.Object):
    ...

class PointerDevice(_winrt.Object):
    ...
    is_integrated: _winrt.Boolean
    max_contacts: _winrt.UInt32
    physical_device_rect: winsdk.windows.foundation.Rect
    pointer_device_type: PointerDeviceType
    screen_rect: winsdk.windows.foundation.Rect
    supported_usages: winsdk.windows.foundation.collections.IVectorView[PointerDeviceUsage]
    max_pointers_with_z_distance: _winrt.UInt32
    def get_pointer_device(pointer_id: _winrt.UInt32) -> PointerDevice:
        ...
    def get_pointer_devices() -> winsdk.windows.foundation.collections.IVectorView[PointerDevice]:
        ...

class TouchCapabilities(_winrt.Object):
    ...
    contacts: _winrt.UInt32
    touch_present: _winrt.Int32
    def __init__(self, ) -> None:
        ...

