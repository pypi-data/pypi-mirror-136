{"version":3,"file":"59d8d9f6.js","mappings":";AA6BA;;;;AAIA;AACA;AACA;AACA;;;;AA9BA;;;;;;;;AAAA;ACwIA;AATA;;AAuCA;AAIA;;;AAGA;;;AAIA;;AAMA;;;AAIA;AACA;;;;AAIA;AAGA;;AAEA;;AAIA;;AAGA;;;AAIA;AAEA;;AAEA;;AAEA;AAEA;AACA;;AAEA;;;AAIA;AACA;;;AAGA;AAGA;;AAEA;;;;;AAQA;;AAGA;;AAEA;;AAEA;;AAEA;;AAGA;AACA;AAEA;AACA;;AAKA;;AAIA;;;AAIA;AACA;;;;;AAKA;;AAMA;;;AAIA;;;;AAUA;;AAGA;AAGA;AACA;AAGA;AAGA;;AAEA;;;AAIA;;;;AASA;;AAGA;;AAGA;AACA;;;AAGA;;;;AAIA;;;;AAQA;AAKA;AACA;AAGA;AACA;;;AAGA;;AAEA;;;;;AAUA;;AAGA;;AAEA;;;;AAQA;;;AAMA;;;AAMA;;AAxUA;;;AAsaA;;;AAGA;AAGA;;AAYA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;;;AAKA;AACA;AACA;;;;AAOA;;AAGA;AACA;AACA;;AAEA;;AAIA;AAEA;;AAEA;;;;AAIA;AAleA;;AAgpBA;;;AAKA;;AAEA;AAIA;;;AAMA;;;AAMA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3qBA","sources":["webpack://home-assistant-frontend/./src/components/ha-button-menu.ts","webpack://home-assistant-frontend/./src/components/media-player/ha-media-player-browse.ts"],"sourcesContent":["import \"@material/mwc-menu\";\nimport type { Corner, Menu } from \"@material/mwc-menu\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\n\n@customElement(\"ha-button-menu\")\nexport class HaButtonMenu extends LitElement {\n  @property() public corner: Corner = \"TOP_START\";\n\n  @property({ type: Boolean }) public multi = false;\n\n  @property({ type: Boolean }) public activatable = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public fixed = false;\n\n  @query(\"mwc-menu\", true) private _menu?: Menu;\n\n  public get items() {\n    return this._menu?.items;\n  }\n\n  public get selected() {\n    return this._menu?.selected;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div @click=${this._handleClick}>\n        <slot name=\"trigger\"></slot>\n      </div>\n      <mwc-menu\n        .corner=${this.corner}\n        .fixed=${this.fixed}\n        .multi=${this.multi}\n        .activatable=${this.activatable}\n      >\n        <slot></slot>\n      </mwc-menu>\n    `;\n  }\n\n  private _handleClick(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._menu!.anchor = this;\n    this._menu!.show();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-block;\n        position: relative;\n      }\n      ::slotted([disabled]) {\n        color: var(--disabled-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-menu\": HaButtonMenu;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport \"@material/mwc-list/mwc-list\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport {\n  mdiArrowLeft,\n  mdiClose,\n  mdiPlay,\n  mdiPlus,\n  mdiInformation,\n  mdiDelete,\n  mdiImageEdit,\n} from \"@mdi/js\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport {\n  customElement,\n  eventOptions,\n  property,\n  query,\n  state,\n} from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeRTLDirection } from \"../../common/util/compute_rtl\";\nimport { debounce } from \"../../common/util/debounce\";\nimport type { MediaPlayerItem } from \"../../data/media-player\";\nimport {\n  browseLocalMediaPlayer,\n  browseMediaPlayer,\n  BROWSER_PLAYER,\n  MediaClassBrowserSettings,\n  MediaPickedEvent,\n  MediaPlayerBrowseAction,\n} from \"../../data/media-player\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../dialogs/generic/show-dialog-box\";\nimport { installResizeObserver } from \"../../panels/lovelace/common/install-resize-observer\";\nimport { haStyle } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport { documentationUrl } from \"../../util/documentation-url\";\nimport \"../entity/ha-entity-picker\";\nimport \"../ha-button-menu\";\nimport \"../ha-card\";\nimport \"../ha-circular-progress\";\nimport \"../ha-fab\";\nimport \"../ha-icon-button\";\nimport \"../ha-svg-icon\";\nimport {\n  showAisGaleryDialog,\n  AisGaleryDialogParams,\n} from \"../../panels/aisgalery/show-ha-aisgalery-dialog\";\nimport { showWebBrowserPlayMediaAisDialog } from \"../../panels/media-browser/show-media-player-ais-dialog\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"media-picked\": MediaPickedEvent;\n  }\n}\n\n@customElement(\"ha-media-player-browse\")\nexport class HaMediaPlayerBrowse extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public entityId!: string;\n\n  @property() public mediaContentId?: string;\n\n  @property() public mediaContentType?: string;\n\n  @property() public action: MediaPlayerBrowseAction = \"play\";\n\n  @property({ type: Boolean }) public dialog = false;\n\n  @property({ type: Boolean, attribute: \"narrow\", reflect: true })\n  private _narrow = false;\n\n  @property({ type: Boolean, attribute: \"scroll\", reflect: true })\n  private _scrolled = false;\n\n  @state() private _loading = false;\n\n  @state() private _error?: { message: string; code: string };\n\n  @state() private _mediaPlayerItems: MediaPlayerItem[] = [];\n\n  @query(\".header\") private _header?: HTMLDivElement;\n\n  @query(\".content\") private _content?: HTMLDivElement;\n\n  private _headerOffsetHeight = 0;\n\n  private _resizeObserver?: ResizeObserver;\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    this.updateComplete.then(() => this._attachObserver());\n  }\n\n  public disconnectedCallback(): void {\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n    }\n  }\n\n  public navigateBack() {\n    this._mediaPlayerItems!.pop();\n    const item = this._mediaPlayerItems!.pop();\n    if (!item) {\n      return;\n    }\n    this._navigate(item);\n  }\n\n  protected render(): TemplateResult {\n    if (this._loading) {\n      return html`<ha-circular-progress active></ha-circular-progress>`;\n    }\n\n    if (this._error && !this._mediaPlayerItems.length) {\n      if (this.dialog) {\n        this._closeDialogAction();\n        showAlertDialog(this, {\n          title: this.hass.localize(\n            \"ui.components.media-browser.media_browsing_error\"\n          ),\n          text: this._renderError(this._error),\n        });\n      } else {\n        return html`\n          <div class=\"container\">${this._renderError(this._error)}</div>\n        `;\n      }\n    }\n\n    if (!this._mediaPlayerItems.length) {\n      return html``;\n    }\n\n    const currentItem =\n      this._mediaPlayerItems[this._mediaPlayerItems.length - 1];\n\n    // check if we are in AIS gallery folder -> media-source://media_source/galeria/.\n    const aisGallery =\n      currentItem.media_content_id === \"media-source://media_source/galeria/.\";\n\n    const previousItem: MediaPlayerItem | undefined =\n      this._mediaPlayerItems.length > 1\n        ? this._mediaPlayerItems[this._mediaPlayerItems.length - 2]\n        : undefined;\n\n    const subtitle = this.hass.localize(\n      `ui.components.media-browser.class.${currentItem.media_class}`\n    );\n    const mediaClass = MediaClassBrowserSettings[currentItem.media_class];\n    const childrenMediaClass =\n      MediaClassBrowserSettings[currentItem.children_media_class];\n\n    return html`\n      <div\n        class=\"header ${classMap({\n          \"no-img\": !currentItem.thumbnail,\n          \"no-dialog\": !this.dialog,\n        })}\"\n        @transitionend=${this._setHeaderHeight}\n      >\n        <div class=\"header-content\">\n          ${currentItem.thumbnail\n            ? html`\n                <div\n                  class=\"img\"\n                  style=${styleMap({\n                    backgroundImage: currentItem.thumbnail\n                      ? `url(${currentItem.thumbnail})`\n                      : \"none\",\n                  })}\n                >\n                  ${this._narrow && currentItem?.can_play\n                    ? html`\n                        <ha-fab\n                          mini\n                          .item=${currentItem}\n                          @click=${this._actionClicked}\n                        >\n                          <ha-svg-icon\n                            slot=\"icon\"\n                            .label=${this.hass.localize(\n                              `ui.components.media-browser.${this.action}-media`\n                            )}\n                            .path=${this.action === \"play\" ? mdiPlay : mdiPlus}\n                          ></ha-svg-icon>\n                          ${this.hass.localize(\n                            `ui.components.media-browser.${this.action}`\n                          )}\n                        </ha-fab>\n                      `\n                    : \"\"}\n                </div>\n              `\n            : html``}\n          <div class=\"header-info\">\n            <div class=\"breadcrumb\">\n              ${previousItem\n                ? html`\n                    <div class=\"previous-title\" @click=${this.navigateBack}>\n                      <ha-svg-icon .path=${mdiArrowLeft}></ha-svg-icon>\n                      ${previousItem.title}\n                    </div>\n                  `\n                : \"\"}\n              <h1 class=\"title\">${currentItem.title}</h1>\n              ${subtitle ? html` <h2 class=\"subtitle\">${subtitle}</h2> ` : \"\"}\n            </div>\n            ${currentItem.can_play && (!currentItem.thumbnail || !this._narrow)\n              ? html`\n                  <mwc-button\n                    raised\n                    .item=${currentItem}\n                    @click=${this._actionClicked}\n                  >\n                    <ha-svg-icon\n                      .label=${this.hass.localize(\n                        `ui.components.media-browser.${this.action}-media`\n                      )}\n                      .path=${this.action === \"play\" ? mdiPlay : mdiPlus}\n                    ></ha-svg-icon>\n                    ${this.hass.localize(\n                      `ui.components.media-browser.${this.action}`\n                    )}\n                  </mwc-button>\n                `\n              : \"\"}\n          </div>\n        </div>\n        ${this.dialog\n          ? html`\n              <ha-icon-button\n                .label=${this.hass.localize(\"ui.dialogs.generic.close\")}\n                .path=${mdiClose}\n                @click=${this._closeDialogAction}\n                class=\"header_button\"\n                dir=${computeRTLDirection(this.hass)}\n              ></ha-icon-button>\n            `\n          : \"\"}\n      </div>\n      <div class=\"content\" @scroll=${this._scroll} @touchmove=${this._scroll}>\n        ${this._error\n          ? html`\n              <div class=\"container\">${this._renderError(this._error)}</div>\n            `\n          : currentItem.children?.length\n          ? childrenMediaClass.layout === \"grid\"\n            ? html`\n                <div\n                  class=\"children ${classMap({\n                    portrait: childrenMediaClass.thumbnail_ratio === \"portrait\",\n                  })}\"\n                >\n                  ${currentItem.children.map(\n                    (child) => html`\n                      <div\n                        class=\"child\"\n                        .item=${child}\n                        @click=${this._childClicked}\n                      >\n                        <div class=\"ha-card-parent\">\n                          <ha-card\n                            outlined\n                            style=${styleMap({\n                              backgroundImage: child.thumbnail\n                                ? `url(${child.thumbnail})`\n                                : \"none\",\n                            })}\n                          >\n                            ${!child.thumbnail\n                              ? html`\n                                  <ha-svg-icon\n                                    class=\"folder\"\n                                    .path=${MediaClassBrowserSettings[\n                                      child.media_class === \"directory\"\n                                        ? child.children_media_class ||\n                                          child.media_class\n                                        : child.media_class\n                                    ].icon}\n                                  ></ha-svg-icon>\n                                `\n                              : \"\"}\n                          </ha-card>\n                          ${child.can_play\n                            ? html`\n                                <ha-icon-button\n                                  class=\"play ${classMap({\n                                    can_expand: child.can_expand,\n                                  })}\"\n                                  .item=${child}\n                                  .label=${this.hass.localize(\n                                    `ui.components.media-browser.${this.action}-media`\n                                  )}\n                                  .path=${this.action === \"play\"\n                                    ? mdiPlay\n                                    : mdiPlus}\n                                  @click=${this._actionClicked}\n                                ></ha-icon-button>\n                              `\n                            : \"\"}\n                        </div>\n                        <!-- AIS add info button for admins only aisGallery-->\n                        ${this._getAisImageButtons(\n                          aisGallery,\n                          child,\n                          childrenMediaClass.layout || \"\"\n                        )}\n                      </div>\n                    `\n                  )}\n                </div>\n              `\n            : html`\n                <mwc-list>\n                  ${currentItem.children.map(\n                    (child) => html`\n                      <mwc-list-item\n                        @click=${this._childClicked}\n                        .item=${child}\n                        graphic=\"avatar\"\n                        hasMeta\n                        dir=${computeRTLDirection(this.hass)}\n                      >\n                        <div\n                          class=\"graphic\"\n                          style=${ifDefined(\n                            mediaClass.show_list_images && child.thumbnail\n                              ? `background-image: url(${child.thumbnail})`\n                              : undefined\n                          )}\n                          slot=\"graphic\"\n                        >\n                          <ha-icon-button\n                            class=\"play ${classMap({\n                              show:\n                                !mediaClass.show_list_images ||\n                                !child.thumbnail,\n                            })}\"\n                            .item=${child}\n                            .label=${this.hass.localize(\n                              `ui.components.media-browser.${this.action}-media`\n                            )}\n                            .path=${this.action === \"play\" ? mdiPlay : mdiPlus}\n                            @click=${this._actionClicked}\n                          ></ha-icon-button>\n                        </div>\n                        <span class=\"title\">${child.title}</span>\n                        <!-- AIS add info button for admins only aisGallery-->\n                        ${this._getAisImageButtons(\n                          aisGallery,\n                          child,\n                          childrenMediaClass.layout || \"\"\n                        )}\n                      </mwc-list-item>\n                      <li divider role=\"separator\"></li>\n                    `\n                  )}\n                </mwc-list>\n              `\n          : html`\n              <div class=\"container\">\n                ${this.hass.localize(\"ui.components.media-browser.no_items\")}\n                <br />\n                ${aisGallery\n                  ? html`<br />${this.hass.localize(\n                        \"ui.components.media-browser.learn_adding_local_media\",\n                        \"documentation\",\n                        html`<a\n                          href=\"https://www.ai-speaker.com/docs/ais_app_integration_gallery\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                          >${this.hass.localize(\n                            \"ui.components.media-browser.documentation\"\n                          )}</a\n                        >`\n                      )}\n                      <br />\n                      ${this.hass.localize(\n                        \"ui.components.media-browser.local_media_files\"\n                      )}`\n                  : \"\"}\n              </div>\n            `}\n        ${this._getAisImageFabButton(aisGallery)}\n      </div>\n    `;\n  }\n\n  protected firstUpdated(): void {\n    this._measureCard();\n    this._attachObserver();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    if (\n      changedProps.has(\"_mediaPlayerItems\") &&\n      this._mediaPlayerItems.length\n    ) {\n      this._setHeaderHeight();\n    }\n\n    if (\n      changedProps.get(\"_scrolled\") !== undefined &&\n      this._mediaPlayerItems.length\n    ) {\n      this._animateHeaderHeight();\n    }\n\n    if (\n      !changedProps.has(\"entityId\") &&\n      !changedProps.has(\"mediaContentId\") &&\n      !changedProps.has(\"mediaContentType\") &&\n      !changedProps.has(\"action\")\n    ) {\n      return;\n    }\n\n    if (changedProps.has(\"entityId\")) {\n      this._error = undefined;\n      this._mediaPlayerItems = [];\n    }\n\n    this._fetchData(this.mediaContentId, this.mediaContentType)\n      .then((itemData) => {\n        if (!itemData) {\n          return;\n        }\n\n        this._mediaPlayerItems = [itemData];\n      })\n      .catch((err) => {\n        this._error = err;\n      });\n  }\n\n  private async _setHeaderHeight() {\n    await this.updateComplete;\n    const header = this._header;\n    const content = this._content;\n    if (!header || !content) {\n      return;\n    }\n    this._headerOffsetHeight = header.offsetHeight;\n    content.style.marginTop = `${this._headerOffsetHeight}px`;\n    content.style.maxHeight = `calc(var(--media-browser-max-height, 100%) - ${this._headerOffsetHeight}px)`;\n  }\n\n  private _animateHeaderHeight() {\n    let start;\n    const animate = (time) => {\n      if (start === undefined) {\n        start = time;\n      }\n      const elapsed = time - start;\n      this._setHeaderHeight();\n      if (elapsed < 400) {\n        requestAnimationFrame(animate);\n      }\n    };\n    requestAnimationFrame(animate);\n  }\n\n  private _actionClicked(ev: MouseEvent): void {\n    ev.stopPropagation();\n    const item = (ev.currentTarget as any).item;\n\n    this._runAction(item);\n  }\n\n  // AIS actions\n  private _getAisImageFabButton(aisGallery: boolean): TemplateResult {\n    if (aisGallery) {\n      return html` <mwc-fab\n        slot=\"fab\"\n        title=\"Dodaj\"\n        @click=${this._addImage}\n        class=\"addImageFab\"\n      >\n        <ha-svg-icon slot=\"icon\" path=${mdiPlus}></ha-svg-icon>\n      </mwc-fab>`;\n    }\n    return html``;\n  }\n\n  private _getAisImageButtons(\n    aisGallery: boolean,\n    item: MediaPlayerItem,\n    layout: string\n  ): TemplateResult {\n    const addClass = layout === \"grid\" ? \"\" : \"Line\";\n    if (this.hass.user!.is_admin && aisGallery) {\n      return html` <div class=\"aisButtons${addClass}\">\n        <mwc-icon-button\n          class=\"aisButton${addClass} aisInfoButton\"\n          .item=${item}\n          @click=${this._actionClickedInfo}\n        >\n          <ha-svg-icon path=${mdiInformation}></ha-svg-icon>\n        </mwc-icon-button>\n        <mwc-icon-button\n          class=\"aisButton${addClass} aisEditButton\"\n          .item=${item}\n          @click=${this._actionClickedEdit}\n        >\n          <ha-svg-icon path=${mdiImageEdit}></ha-svg-icon>\n        </mwc-icon-button>\n        <mwc-icon-button\n          class=\"aisButton${addClass} aisDeleteButton\"\n          .item=${item}\n          @click=${this._actionClickedDelete}\n        >\n          <ha-svg-icon path=${mdiDelete}></ha-svg-icon>\n        </mwc-icon-button>\n      </div>`;\n    }\n\n    if (item.can_play && this.hass.user!.is_admin && !aisGallery)\n      return html` <div class=\"aisButtons${addClass}\">\n        <mwc-icon-button\n          class=\"aisButton${addClass} aisInfoButton\"\n          .item=${item}\n          @click=${this._actionClickedInfo}\n        >\n          <ha-svg-icon path=${mdiInformation}></ha-svg-icon>\n        </mwc-icon-button>\n      </div>`;\n\n    if (!aisGallery) {\n      return html` <div class=\"title\">\n          ${item.title}\n          <paper-tooltip fitToVisibleBounds position=\"top\" offset=\"4\"\n            >${item.title}</paper-tooltip\n          >\n        </div>\n        <div class=\"type\">\n          ${this.hass.localize(\n            `ui.components.media-browser.content-type.${item.media_content_type}`\n          )}\n        </div>`;\n    }\n    return html``;\n  }\n\n  private async _actionClickedInfo(ev: MouseEvent): Promise<void> {\n    ev.stopPropagation();\n    const item = (ev.currentTarget as any).item;\n    const resolvedUrl: any = await this.hass.callWS({\n      type: \"media_source/resolve_media\",\n      media_content_id: item.media_content_id,\n    });\n\n    showWebBrowserPlayMediaAisDialog(this, {\n      sourceUrl: resolvedUrl.url,\n      sourceType: resolvedUrl.mime_type,\n      sourceThumbnail: item.thumbnail,\n      title: item.title,\n    });\n  }\n\n  private async _actionClickedEdit(ev: MouseEvent): Promise<void> {\n    ev.stopPropagation();\n    const item = (ev.currentTarget as any).item;\n    const resolvedUrl: any = await this.hass.callWS({\n      type: \"media_source/resolve_media\",\n      media_content_id: item.media_content_id,\n    });\n\n    fireEvent(this, \"show-dialog\", {\n      dialogTag: \"hui-dialog-web-browser-ais-edit-image\",\n      dialogImport: () =>\n        import(\n          /* webpackChunkName: \"hui-dialog-ais-edit-image\" */ \"../../panels/media-browser/hui-dialog-web-browser-ais-edit-image\"\n        ),\n      dialogParams: {\n        sourceUrl: resolvedUrl.url,\n        sourceType: resolvedUrl.mime_type,\n        title: item.title,\n      },\n    });\n  }\n\n  private async _actionClickedDelete(ev: MouseEvent): Promise<void> {\n    ev.stopPropagation();\n    const item = (ev.currentTarget as any).item;\n    const confirmed = await showConfirmationDialog(this, {\n      title: item.title,\n      text: \"Jesteś pewny, że chcesz usunąć ten plik?\",\n      confirmText: \"TAK\",\n      dismissText: \"NIE\",\n    });\n\n    if (confirmed) {\n      const resolvedUrl: any = await this.hass.callWS({\n        type: \"media_source/resolve_media\",\n        media_content_id: item.media_content_id,\n      });\n      await this.hass.callService(\"ais_files\", \"remove_file\", {\n        path: resolvedUrl.url,\n      });\n      // refres page\n      this._navigate(this._mediaPlayerItems[this._mediaPlayerItems.length - 1]);\n    }\n  }\n\n  private _runAction(item: MediaPlayerItem): void {\n    fireEvent(this, \"media-picked\", { item });\n  }\n\n  private async _childClicked(ev: MouseEvent): Promise<void> {\n    const target = ev.currentTarget as any;\n    const item: MediaPlayerItem = target.item;\n\n    if (!item) {\n      return;\n    }\n\n    if (!item.can_expand) {\n      this._runAction(item);\n      return;\n    }\n\n    this._navigate(item);\n  }\n\n  private async _navigate(item: MediaPlayerItem) {\n    this._error = undefined;\n\n    let itemData: MediaPlayerItem;\n\n    try {\n      itemData = await this._fetchData(\n        item.media_content_id,\n        item.media_content_type\n      );\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: this.hass.localize(\n          \"ui.components.media-browser.media_browsing_error\"\n        ),\n        text: this._renderError(err),\n      });\n      this._loading = false;\n      return;\n    }\n\n    this._content?.scrollTo(0, 0);\n    this._scrolled = false;\n    this._mediaPlayerItems = [...this._mediaPlayerItems, itemData];\n  }\n\n  private async _fetchData(\n    mediaContentId?: string,\n    mediaContentType?: string\n  ): Promise<MediaPlayerItem> {\n    this._loading = true;\n    let itemData: any;\n    try {\n      itemData =\n        this.entityId !== BROWSER_PLAYER\n          ? await browseMediaPlayer(\n              this.hass,\n              this.entityId,\n              mediaContentId,\n              mediaContentType\n            )\n          : await browseLocalMediaPlayer(\n              this.hass,\n              mediaContentId,\n              mediaContentType\n            );\n    } finally {\n      this._loading = false;\n    }\n    return itemData;\n  }\n\n  private _measureCard(): void {\n    this._narrow = (this.dialog ? window.innerWidth : this.offsetWidth) < 450;\n  }\n\n  @eventOptions({ passive: true })\n  private _scroll(ev: Event): void {\n    const content = ev.currentTarget as HTMLDivElement;\n    if (!this._scrolled && content.scrollTop > this._headerOffsetHeight) {\n      this._scrolled = true;\n    } else if (this._scrolled && content.scrollTop < this._headerOffsetHeight) {\n      this._scrolled = false;\n    }\n  }\n\n  private async _attachObserver(): Promise<void> {\n    if (!this._resizeObserver) {\n      await installResizeObserver();\n      this._resizeObserver = new ResizeObserver(\n        debounce(() => this._measureCard(), 250, false)\n      );\n    }\n\n    this._resizeObserver.observe(this);\n  }\n\n  private _closeDialogAction(): void {\n    fireEvent(this, \"close-dialog\");\n  }\n\n  private _renderError(err: { message: string; code: string }) {\n    if (err.message === \"Media directory does not exist.\") {\n      return html`\n        <h2>\n          ${this.hass.localize(\n            \"ui.components.media-browser.no_local_media_found\"\n          )}\n        </h2>\n        <p>\n          ${this.hass.localize(\"ui.components.media-browser.no_media_folder\")}\n          <br />\n          ${this.hass.localize(\n            \"ui.components.media-browser.setup_local_help\",\n            \"documentation\",\n            html`<a\n              href=${documentationUrl(\n                this.hass,\n                \"/more-info/local-media/setup-media\"\n              )}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >${this.hass.localize(\n                \"ui.components.media-browser.documentation\"\n              )}</a\n            >`\n          )}\n          <br />\n          ${this.hass.localize(\"ui.components.media-browser.local_media_files\")}\n        </p>\n      `;\n    }\n    return html`<span class=\"error\">${err.message}</span>`;\n  }\n\n  // AIS add image button\n  private _addImage(): void {\n    // refres page\n    const item = this._mediaPlayerItems[this._mediaPlayerItems.length - 1];\n    const x = () => {\n      this._navigate(item);\n    };\n    const aisGaleryDialogParams: AisGaleryDialogParams = { jsCallback: x };\n    showAisGaleryDialog(this, aisGaleryDialogParams);\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: flex;\n          flex-direction: column;\n          position: relative;\n        }\n\n        ha-circular-progress {\n          --mdc-theme-primary: var(--primary-color);\n          display: flex;\n          justify-content: center;\n          margin: 40px;\n        }\n\n        .container {\n          padding: 16px;\n        }\n\n        .content {\n          overflow-y: auto;\n          padding-bottom: 20px;\n          box-sizing: border-box;\n        }\n\n        .header {\n          display: flex;\n          justify-content: space-between;\n          border-bottom: 1px solid var(--divider-color);\n          background-color: var(--card-background-color);\n          position: absolute;\n          top: 0;\n          right: 0;\n          left: 0;\n          z-index: 5;\n          padding: 20px 24px 10px;\n        }\n\n        .header_button {\n          position: relative;\n          right: -8px;\n        }\n\n        .header-content {\n          display: flex;\n          flex-wrap: wrap;\n          flex-grow: 1;\n          align-items: flex-start;\n        }\n\n        .header-content .img {\n          height: 200px;\n          width: 200px;\n          margin-right: 16px;\n          background-size: cover;\n          border-radius: 4px;\n          transition: width 0.4s, height 0.4s;\n        }\n\n        .header-info {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          align-self: stretch;\n          min-width: 0;\n          flex: 1;\n        }\n\n        .header-info mwc-button {\n          display: block;\n          --mdc-theme-primary: var(--primary-color);\n        }\n\n        .breadcrumb {\n          display: flex;\n          flex-direction: column;\n          overflow: hidden;\n          flex-grow: 1;\n        }\n\n        .breadcrumb .title {\n          font-size: 32px;\n          line-height: 1.2;\n          font-weight: bold;\n          margin: 0;\n          overflow: hidden;\n          display: -webkit-box;\n          -webkit-box-orient: vertical;\n          -webkit-line-clamp: 2;\n          padding-right: 8px;\n        }\n\n        .breadcrumb .previous-title {\n          font-size: 14px;\n          padding-bottom: 8px;\n          color: var(--secondary-text-color);\n          overflow: hidden;\n          text-overflow: ellipsis;\n          cursor: pointer;\n          --mdc-icon-size: 14px;\n        }\n\n        .breadcrumb .subtitle {\n          font-size: 16px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          margin-bottom: 0;\n          transition: height 0.5s, margin 0.5s;\n        }\n\n        /* ============= CHILDREN ============= */\n\n        mwc-list {\n          --mdc-list-vertical-padding: 0;\n          --mdc-list-item-graphic-margin: 0;\n          --mdc-theme-text-icon-on-background: var(--secondary-text-color);\n          margin-top: 10px;\n        }\n\n        mwc-list li:last-child {\n          display: none;\n        }\n\n        mwc-list li[divider] {\n          border-bottom-color: var(--divider-color);\n        }\n\n        .children {\n          display: grid;\n          grid-template-columns: repeat(\n            auto-fit,\n            minmax(var(--media-browse-item-size, 175px), 0.1fr)\n          );\n          grid-gap: 16px;\n          padding: 0px 24px;\n          margin: 8px 0px;\n        }\n\n        :host([dialog]) .children {\n          grid-template-columns: repeat(\n            auto-fit,\n            minmax(var(--media-browse-item-size, 175px), 0.33fr)\n          );\n        }\n\n        .child {\n          display: flex;\n          flex-direction: column;\n          cursor: pointer;\n        }\n\n        .ha-card-parent {\n          position: relative;\n          width: 100%;\n        }\n\n        .children ha-card {\n          width: 100%;\n          padding-bottom: 100%;\n          position: relative;\n          box-sizing: border-box;\n          background-size: cover;\n          background-repeat: no-repeat;\n          background-position: center;\n          transition: padding-bottom 0.1s ease-out;\n        }\n\n        .portrait.children ha-card {\n          padding-bottom: 150%;\n        }\n\n        .child .folder,\n        .child .play {\n          position: absolute;\n        }\n\n        .child .folder {\n          color: var(--secondary-text-color);\n          top: calc(50% - (var(--mdc-icon-size) / 2));\n          left: calc(50% - (var(--mdc-icon-size) / 2));\n          --mdc-icon-size: calc(var(--media-browse-item-size, 175px) * 0.4);\n        }\n\n        .child .play {\n          transition: color 0.5s;\n          border-radius: 50%;\n          bottom: calc(50% - 35px);\n          right: calc(50% - 35px);\n          opacity: 0;\n          transition: opacity 0.1s ease-out;\n        }\n\n        .child .play:not(.can_expand) {\n          --mdc-icon-button-size: 70px;\n          --mdc-icon-size: 48px;\n        }\n\n        .ha-card-parent:hover .play:not(.can_expand) {\n          opacity: 1;\n          color: var(--primary-color);\n        }\n\n        .child .play.can_expand {\n          opacity: 1;\n          bottom: -4px;\n          right: 4px;\n          z-index: 9999;\n        }\n\n        .child .play:hover {\n          color: var(--primary-color);\n        }\n\n        .ha-card-parent:hover ha-card {\n          opacity: 0.5;\n        }\n\n        .child .title {\n          font-size: 16px;\n          padding-top: 8px;\n          padding-left: 2px;\n          overflow: hidden;\n          display: -webkit-box;\n          -webkit-box-orient: vertical;\n          -webkit-line-clamp: 2;\n          text-overflow: ellipsis;\n        }\n\n        .child .type {\n          font-size: 12px;\n          color: var(--secondary-text-color);\n          padding-left: 2px;\n        }\n\n        mwc-list-item .graphic {\n          background-size: cover;\n        }\n\n        mwc-list-item .graphic .play {\n          opacity: 0;\n          transition: all 0.5s;\n          background-color: rgba(var(--rgb-card-background-color), 0.5);\n          border-radius: 50%;\n          --mdc-icon-button-size: 40px;\n        }\n\n        mwc-list-item:hover .graphic .play {\n          opacity: 1;\n          color: var(--primary-color);\n        }\n\n        mwc-list-item .graphic .play.show {\n          opacity: 1;\n          background-color: transparent;\n        }\n\n        mwc-list-item .title {\n          margin-left: 16px;\n        }\n        mwc-list-item[dir=\"rtl\"] .title {\n          margin-right: 16px;\n          margin-left: 0;\n        }\n\n        /* ============= Narrow ============= */\n\n        :host([narrow]) {\n          padding: 0;\n        }\n\n        :host([narrow]) .breadcrumb .title {\n          font-size: 24px;\n        }\n\n        :host([narrow]) .header {\n          padding: 0;\n        }\n\n        :host([narrow]) .header.no-dialog {\n          display: block;\n        }\n\n        :host([narrow]) .header_button {\n          position: absolute;\n          top: 14px;\n          right: 8px;\n        }\n\n        :host([narrow]) .header-content {\n          flex-direction: column;\n          flex-wrap: nowrap;\n        }\n\n        :host([narrow]) .header-content .img {\n          height: auto;\n          width: 100%;\n          margin-right: 0;\n          padding-bottom: 50%;\n          margin-bottom: 8px;\n          position: relative;\n          background-position: center;\n          border-radius: 0;\n          transition: width 0.4s, height 0.4s, padding-bottom 0.4s;\n        }\n\n        ha-fab {\n          position: absolute;\n          --mdc-theme-secondary: var(--primary-color);\n          bottom: -20px;\n          right: 20px;\n        }\n\n        :host([narrow]) .header-info mwc-button {\n          margin-top: 16px;\n          margin-bottom: 8px;\n        }\n\n        :host([narrow]) .header-info {\n          padding: 20px 24px 10px;\n        }\n\n        :host([narrow]) .media-source {\n          padding: 0 24px;\n        }\n\n        :host([narrow]) .children {\n          grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) !important;\n        }\n\n        /* ============= Scroll ============= */\n\n        :host([scroll]) .breadcrumb .subtitle {\n          height: 0;\n          margin: 0;\n        }\n\n        :host([scroll]) .breadcrumb .title {\n          -webkit-line-clamp: 1;\n        }\n\n        :host(:not([narrow])[scroll]) .header:not(.no-img) ha-icon-button {\n          align-self: center;\n        }\n\n        :host([scroll]) .header-info mwc-button,\n        .no-img .header-info mwc-button {\n          padding-right: 4px;\n        }\n\n        :host([scroll][narrow]) .no-img .header-info mwc-button {\n          padding-right: 16px;\n        }\n\n        :host([scroll]) .header-info {\n          flex-direction: row;\n        }\n\n        :host([scroll]) .header-info mwc-button {\n          align-self: center;\n          margin-top: 0;\n          margin-bottom: 0;\n        }\n\n        :host([scroll][narrow]) .no-img .header-info {\n          flex-direction: row-reverse;\n        }\n\n        :host([scroll][narrow]) .header-info {\n          padding: 20px 24px 10px 24px;\n          align-items: center;\n        }\n\n        :host([scroll]) .header-content {\n          align-items: flex-end;\n          flex-direction: row;\n        }\n\n        :host([scroll]) .header-content .img {\n          height: 75px;\n          width: 75px;\n        }\n\n        :host([scroll][narrow]) .header-content .img {\n          height: 100px;\n          width: 100px;\n          padding-bottom: initial;\n          margin-bottom: 0;\n        }\n\n        :host([scroll]) ha-fab {\n          bottom: 4px;\n          right: 4px;\n          --mdc-fab-box-shadow: none;\n          --mdc-theme-secondary: rgba(var(--rgb-primary-color), 0.5);\n        }\n        /* AIS css start */\n        mwc-list-item {\n          display: block;\n        }\n        mwc-fab.addImageFab {\n          position: fixed !important;\n          bottom: 16px !important;\n          right: 26px !important;\n          --mdc-theme-secondary: var(--accent-color) !important;\n        }\n        mwc-icon-button.aisInfoButton {\n          position: relative !important;\n        }\n        div.aisButtons {\n          position: relative;\n          width: 100%;\n          height: 3em;\n          display: flex;\n          bottom: 3em;\n          margin-bottom: -3em;\n          background-color: #9e9e9e8a;\n        }\n        div.aisButtonsLine {\n          float: right;\n          position: relative;\n        }\n        mwc-icon-button.aisButton.aisDeleteButton {\n          margin-left: auto;\n        }\n        mwc-icon-button.aisInfoButton:hover {\n          color: var(--primary-color);\n        }\n        mwc-icon-button.aisEditButton:hover {\n          color: var(--primary-color);\n        }\n        mwc-icon-button.aisDeleteButton:hover {\n          color: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-media-player-browse\": HaMediaPlayerBrowse;\n  }\n}\n"],"names":[],"sourceRoot":""}