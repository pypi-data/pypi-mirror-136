#!python
# This file is placed in the Public Domain.


import os
import readline
import termios
import traceback
import sys
import time


sys.path.insert(0, os.getcwd())


from bot.cbs import Cbs
from bot.cmd import Cmd
from bot.evt import Event
from bot.flt import Fleet
from bot.hdl import Handler, dispatch
from bot.krn import Cfg, boot, kcmd, wait
from bot.fnc import format
from bot.thr import launch


from bot.irc import IRC
from bot.irc import Cfg as ICfg
from bot.rss import Fetcher


import bot.all


ICfg.channel = "#botd"
ICfg.nick = "botd"


Cfg.wd = os.path.expanduser("~/.bot")


class Console(Handler):

    def __init__(self):
        Handler.__init__(self)

    def announce(self, txt):
        pass

    def handle(self, e):
        Handler.handle(self, e)
        e.wait()

    def poll(self):
        e = Event()
        e.txt = input("> ")
        e.orig = repr(self)
        return e

    def raw(self, txt):
        print(txt)


def daemon():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    os.umask(0)
    si = open("/dev/null", 'r')
    so = open("/dev/null", 'a+')
    se = open("/dev/null", 'a+')
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())


def nprint(txt):
    print(txt)
    sys.stdout.flush()
    

def wrap(func):
    fd = sys.stdin.fileno()
    old = termios.tcgetattr(fd)
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old)


def main():
    boot(" ".join(sys.argv[1:]))
    if Cfg.txt:
        c = Console()
        return kcmd(c, Cfg.otxt)
    nprint("BOT start at %s" % (time.ctime(time.time()).replace("  ", " ")))
    if Cfg.daemon:
        daemon()
    if "i" in Cfg.opts:
        i = IRC()
        i.start()
        nprint(format(i.cfg, "server,port,channel,nick,cc"))
    if "r" in Cfg.opts:
        f = Fetcher()
        f.start()
    c = Console()
    c.start()
    wait()


wrap(main)
