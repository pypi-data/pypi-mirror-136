Metadata-Version: 2.1
Name: check-digit-EAN13
Version: 0.2
Summary: A simple library to get check digit
Home-page: UNKNOWN
Author: Muhammed gassali
Author-email: mhdgassalishalu5554@gmail.com
License: MIT
Keywords: check-digit
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Education
Classifier: Operating System :: Microsoft :: Windows :: Windows 10
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
License-File: LICENSE.txt

Get  check digit number of your EAN-13 Barcode.
=================================================

Here I'm presenting  a package to find check digit (system generated digit) of 12 digit number which is used
to create EAN-13 Barcode. When we used to create a barcode, the last digit always generated by our machine.In most
of the cases, barcode number want to be unique and it is difficult to find if our new barcode number is already existing in our 
database without knowing this system generated digit and unfortunately I didn't find any package to find this.
That's why I came accross to build a package to fing this crazy digit. 

Installing
================
pip install check-digit-EAN13

Usage
======
from check_digit_EAN13.check_digit import get_check_digit

barcode_number = 123456565456

actual_barcode_number = get_check_digit(barcode_number)

print(actual_barcode_number)


output
=================
1234565654562



exceptions
============
case 1: 
You can't use less than 12 digit here


barcode_number = 123456565

actual_barcode_number = get_check_digit(barcode_number)

output
=================
sorry, please enter 12 digits


case 2: 
You can't enter any character other than digits here


barcode_number = "123uu45656898895"

actual_barcode_number = get_check_digit(barcode_number)

output
=================
sorry, please enter 12 digit numbers



case 3: 
If you enter more than 12 digits, package only read 12 digits


barcode_number = 65623546325436473757847549875948

actual_barcode_number = get_check_digit(barcode_number)

output
=================
6562354632541


