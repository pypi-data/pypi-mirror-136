{
  "src/lib/components/CardDropdown.react.js": {
    "description": "ExampleComponent is an example component.\r\nIt takes a property, `label`, and\r\ndisplays it.\r\nIt renders an input with the property `value`\r\nwhich is editable by the user.",
    "displayName": "CardDropdown",
    "methods": [
      {
        "name": "toggleDropdown",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderDropdownMenu",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "childrenlayout",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A label that will be printed when this component is rendered."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children components displayed inside the grid."
      },
      "value": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "classes": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The classes displayed in the component."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/DateFilter.react.js": {
    "description": "DateFilter is an example component.\r\nIt takes a property, `label`, and\r\ndisplays it.\r\nIt renders an input with the property `value`\r\nwhich is editable by the user.",
    "displayName": "DateFilter",
    "methods": [
      {
        "name": "handleEvent",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          },
          {
            "name": "{ startDate, endDate }",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "initialdate": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The Date displayed in the input."
      },
      "startDate": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The startDate of dateformat in the input."
      },
      "type": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The startDate of dateformat in the input."
      },
      "endDate": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The startDate of dateformat in the input."
      },
      "classes": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The classes displayed in the component."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/RadioFilter.react.js": {
    "description": "ExampleComponent is an example component.\r\nIt takes a property, `label`, and\r\ndisplays it.\r\nIt renders an input with the property `value`\r\nwhich is editable by the user.",
    "displayName": "RadioFilter",
    "methods": [
      {
        "name": "toggleDropdown",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleSubmit",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderDropdownMenu",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "initialarray",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "initialarray": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The type of dateformat in the input."
      },
      "classes": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The classes displayed in the component."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/SelectFilter.react.js": {
    "description": "ExampleComponent is an example component.\r\nIt takes a property, `label`, and\r\ndisplays it.\r\nIt renders an input with the property `value`\r\nwhich is editable by the user.",
    "displayName": "SelectFilter",
    "methods": [
      {
        "name": "handleSave",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "updateSelectedDatePicker",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "type",
            "type": null
          },
          {
            "name": "text",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "showCustomDatePicker",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleSelect",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "range",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "applyDateChange",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "handleClick",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleClose",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "startDate": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The startDate displayed in the input."
      },
      "type": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The type of dateformat in the input."
      },
      "endDate": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The endDate displayed in the input."
      },
      "classes": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The classes displayed in the component."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/TimeGrainFilter.react.js": {
    "description": "TimeGrainFilter is an example component.\r\nIt takes a property, `label`, and\r\ndisplays it.\r\nIt renders an input with the property `value`\r\nwhich is editable by the user.",
    "displayName": "TimeGrainFilter",
    "methods": [
      {
        "name": "handleClick",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "timegrainarray": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The timegrainarray displayed in the input."
      },
      "classes": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The classes displayed in the component."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  }
}