# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['typebuf', 'typebuf.models', 'typebuf.transformers']

package_data = \
{'': ['*']}

install_requires = \
['PyYAML>=6.0,<7.0', 'click>=8.0.3,<9.0.0', 'pydantic>=1.8.2,<2.0.0']

entry_points = \
{'console_scripts': ['typebuf = scripts.cli:cli']}

setup_kwargs = {
    'name': 'typebuf',
    'version': '0.1.4',
    'description': 'Dead simple way to define shared type definitions between applications',
    'long_description': '# TypeBuf\n\n[![Downloads](https://static.pepy.tech/personalized-badge/typebuf?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=Installs)](https://pepy.tech/project/typebuf)\n[![PyPI version](https://badge.fury.io/py/typebuf.svg)](https://badge.fury.io/py/typebuf)\n[![CircleCI](https://circleci.com/gh/shanahanjrs/typebuf/tree/master.svg?style=svg)](https://circleci.com/gh/shanahanjrs/typebuf/tree/master)\n[![codecov](https://codecov.io/gh/shanahanjrs/typebuf/branch/master/graph/badge.svg?token=9J1OCNHSZF)](https://codecov.io/gh/shanahanjrs/typebuf)\n[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=shanahanjrs_typebuf&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=shanahanjrs_typebuf)\n[![Reliability Rating](https://sonarcloud.io/api/project_badges/measure?project=shanahanjrs_typebuf&metric=reliability_rating)](https://sonarcloud.io/summary/new_code?id=shanahanjrs_typebuf)\n\n---\n\n### Dead simple way to create shared type definitions between applications\n\n- Other tools have too much setup? Too much boilerplate? Do too much "magic"? Just:\n  - Define your Types in `types.yaml`\n  - Run TypeBuf: `$ typebuf compile -f types.yaml -l python -l typescript`\n\n## Install\n\n`pip install typebuf`\n\n`poetry add --dev typebuf`\n\n\n## Quickstart\n\n1. Create a file called `types.yaml`, it can be anywhere in your project repo\n \n\n2. Add the following lines to the newly created file:\n\n```\n---\ntypedefs:\n  - typename: User\n    imports:\n      python:\n        - \'from typing import Optional\'\n    fields:\n      - name: first_name\n        type: string\n      - name: age\n        type: int\n        optional: true\n```\n\n\n3. Now call TypeBuf with: `$ typebuf compile -l python -l typescript`\n\n\n4. You now have two new files, one called `user.py` and one called `user.ts` that can you use for \n    things like data serialization/deserialization, validation, subclassing, etc\n\nGenerated Python:\n```python\n"""\nUser type definition file generated by TypeBuf\nNote: Any changes made to this file will be overwritten\n      during next compilation\n"""\n\nfrom typing import Optional\n\n\nclass User:\n    first_name: str\n    age: Optional[int]\n```\n\nGenerated TypeScript:\n\n```typescript\n/**\n * User type definition file generated by TypeBuf\n * Note: Any changes made to this file will be overwritten\n *       during next compilation\n */\n\ninterface User {\n  first_name: string;\n  age?: number;\n}\n```\n\n\n> Note: So far only Python and TypeScript are supported. More languages coming soon!\n\n\n## Demo\n\n> Here\'s a quick demo of me using TypeBuf 0.1.1. First I show the contents of the _types.yaml_ file\n> then I generate Python and TypeScript source code and show the contents of the new files\n\n[![asciicast](https://asciinema.org/a/KRGKPMQ1HCd3OtwJbLvHYWUlJ.svg)](https://asciinema.org/a/KRGKPMQ1HCd3OtwJbLvHYWUlJ)\n\n\n## Documentation\n\n- Inside _types.yaml_ there is an array called `typedefs`. This is where you add your shared type definitions\n- Each type can have the following fields (required fields in **bold**):\n  - **typename**: _string_\n  - imports: _map[string, array[str]]_\n  - **fields**: _array[Field]_\n    - A `Field` has the following attributes:\n      - **name**: _string_\n      - **type**: _string_\n      - optional: _boolean_\n\n- In a type definition you can also specify custom/required _imports_ for any depedencies your classes may need:\n  - ```\n    typedefs:\n      - typename: Address\n        imports:\n          python:\n            - \'from mymodule.user import User\'\n            - \'from typing import Optional\'\n          typescript:\n            - \'import { User } from "./User";\'\n        fields:\n          - ...,\n    ```\n',
    'author': 'John Shanahan',
    'author_email': 'shanahan.jrs@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/shanahanjrs/typebuf',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)
