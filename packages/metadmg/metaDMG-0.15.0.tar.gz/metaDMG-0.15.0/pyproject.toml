[tool.poetry]
name = "metaDMG"
version = "0.15.0"
description = "metaDMG: Estimating ancient damage in (meta)genomic DNA rapidly"
authors = ["Christian Michelsen <christianmichelsen@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "metaDMG", from = "src" }]
repository = "https://github.com/metaDMG/metaDMG/"


[tool.poetry.dependencies]
python = "^3.8"
typer = "^0.3.2"
click-help-colors = "^0.9.1"
PyYAML = "^5.4.1"
iminuit = "^2.8.4"
numpyro = "^0.9.0"
joblib = "^1.1.0"
pyarrow = "^5.0.0"
logger-tt = "^1.6.1"
scipy = { version = "^1.7.3", python = ">=3.8,<3.11" }
numba = { version = "^0.54.1", python = ">=3.8,<3.10" }
psutil = "^5.9.0"

# A list of all of the optional dependencies, some of which are included in the
# below `extras`. They can be opted into by apps.
metaDMG-viz = { version = "^0.7.2", optional = true }
jax = "^0.2.27"


# can be installed as e.g. poetry install --extras "all"
[tool.poetry.extras]
viz = ["metaDMG-viz"]
all = ["metaDMG-viz"]


[tool.poetry.dev-dependencies]
pylint = "^2.12.2"
flake8 = "^3.9.2"
black = {version = "^21.12b0", allow-prereleases = true}
ipykernel = "^6.6.1"
nbformat = "^5.1.3"
# poethepoet = "^0.10.0"
python-semantic-release = "^7.23.0"
pytest = "^6.2.5"
pytest-cov = "^2.12.1"
Pympler = "^0.9"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
metaDMG = "metaDMG.cli:cli_main"

[tool.semantic_release]
version_variable = "pyproject.toml:version" # version location
branch = "main"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
build_command = "pip install poetry && poetry build"  # build dists
dist_path = "dist/"                         # where to put dists
upload_to_pypi = false                      # don't auto-upload to PyPI
remove_dist = false                         # don't remove dists
major_on_zero = false                       # keeps the major version at 0


# [tool.poe.tasks]
# clean = """
# # Multiline commands including comments work too. Unescaped whitespace is ignored.
# rm -rf .coverage
#        .mypy_cache
#        .pytest_cache
#        dist
#        ./**/__pycache__
# """
# format = "black ."  # strings are interpreted as commands by default
# _build = "poetry build"
# _publish = "poetry publish"
# version = { "shell" = "poetry version $(git describe --tags --abbrev=0)" }
# build = ["version", "_build"]
# release = ["clean", "format", "build", "_publish"]