{"version":3,"file":"3672.20c993815b5e6b0cde3a.chunk.js","mappings":"iUAWMA,EAAsB,WAAM,uBAACC,EAAA,EAAW,CAACC,MAAM,oBAE/CC,EAAgB,MAAU,WAAM,mHAA2BH,GAC3DI,EAAU,MAAU,WAAM,6HAAqBJ,GAC/CK,EAAW,MAAU,WAAM,kEAAsBL,GAajDM,EAAW,CACfC,MAAO,CAAEC,KAAM,aAAcC,OAAO,GACpCC,QAAS,CAAEF,KAAM,eAAgBC,OAAO,GACxCE,SAAU,CAAEH,KAAM,gBAAiBC,OAAO,IAGtCG,EAAkB,SAACC,GACvB,OAlBaC,EAmBX,KACE,SAACC,GAAa,SAAGC,OAAOD,GAAUE,IAAI,IAAS,CAAET,KAAM,SAACU,GAAM,OAAAL,EAAMK,SACpEZ,GArBmB,SAACa,GAExB,IAAkC,UAAAC,OAAOC,QAAQP,GAAf,eAEhC,IAFS,WAACQ,EAAO,KAEE,MAFQ,KAER,eAAU,CAAxB,IAAMC,EAAI,KACb,GAAI,KAAaJ,EAAUI,GAAO,OAAOD,EAG7C,OAAO,GARK,IAACR,GAyBTU,EAAe,KAAa,SAACC,GAAM,OACvCC,KAAM,CACJC,UAAWF,EAAEG,QAAQ,GACrBC,SAAU,SAId,SAASC,EAAOC,GACd,IAAMC,EAAUR,IAChB,OAAO,gBAAC,KAAK,SAACQ,QAASA,EAASC,UAAW,QAAaF,IAG1D,IAAMG,EAAY,KAAa,SAACT,GAAM,OACpCU,OAAQ,CACNC,gBAAiBX,EAAEY,QAAQC,OAAOC,MAClCrC,MAAOuB,EAAEY,QAAQG,gBAAgBf,EAAEY,QAAQC,OAAOC,YAItD,SAASE,EAAY,G,IAAE,IAAAnB,QAAAA,OAAO,IAAG,GAAK,EAAEoB,EAAQ,WACtCC,EAASC,EAAA,KAAiB,KAC5BZ,EAAUE,IAChB,OACE,gBAACW,EAAA,GAAM,CACLC,IACE,gCACE,gBAAC,IAAQ,CAACC,SAAS,SAASC,UAAWhB,EAAQG,QAC7C,gBAAC,IAAM,CAACc,MAAO3B,EAAS4B,UAAQ,GAC9B,gBAACpB,EAAM,CAACqB,MAAM,kBAAkBF,MAAM,QAAQG,GAAIT,EAAKU,eACvD,gBAACvB,EAAM,CAACqB,MAAM,UAAUF,MAAM,UAAUG,GAAIT,EAAKW,iBACjD,gBAACxB,EAAM,CAACqB,MAAM,WAAWF,MAAM,WAAWG,GAAIT,EAAKY,oBAGvD,gBAAC,IAAW,CAACC,SAAS,MAAMd,MAOvB,SAASe,EAAM,G,IAAEC,EAAQ,WAC9B7C,EAAU+B,EAAA,KAAiB,MACnC,OACE,gBAACH,EAAW,CAACnB,QAASV,EAAgBC,EAAhBD,CAAuB8C,EAASvC,WACpD,gBAAC,KAAS,KACR,gBAAC,KAAQ,CAACX,KAAMK,EAAMwC,WAAYpB,UAAW9B,EAAeM,OAAK,EAACkD,QAAM,IACxE,gBAAC,KAAQ,CAACnD,KAAMK,EAAMyC,aAAcrB,UAAW7B,EAASK,OAAK,IAC7D,gBAAC,KAAQ,CAACD,KAAMK,EAAM0C,cAAetB,UAAW5B,EAAUI,OAAK,IAC/D,gBAAC,KAAQ,CAACwB,UAAW","sources":["webpack://quilt-navigator/./app/containers/Admin/Admin.js"],"sourcesContent":["import * as R from 'ramda'\nimport * as React from 'react'\nimport * as RR from 'react-router-dom'\nimport * as M from '@material-ui/core'\n\nimport Layout from 'components/Layout'\nimport Placeholder from 'components/Placeholder'\nimport { ThrowNotFound } from 'containers/NotFoundPage'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport * as RT from 'utils/reactTools'\n\nconst SuspensePlaceholder = () => <Placeholder color=\"text.secondary\" />\n\nconst UsersAndRoles = RT.mkLazy(() => import('./UsersAndRoles'), SuspensePlaceholder)\nconst Buckets = RT.mkLazy(() => import('./Buckets'), SuspensePlaceholder)\nconst Settings = RT.mkLazy(() => import('./Settings'), SuspensePlaceholder)\n\nconst match = (cases) => (pathname) => {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const [section, variants] of Object.entries(cases)) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const opts of variants) {\n      if (RR.matchPath(pathname, opts)) return section\n    }\n  }\n  return false\n}\n\nconst sections = {\n  users: { path: 'adminUsers', exact: true },\n  buckets: { path: 'adminBuckets', exact: true },\n  settings: { path: 'adminSettings', exact: true },\n}\n\nconst getAdminSection = (paths) =>\n  match(\n    R.map(\n      (variants) => [].concat(variants).map(R.evolve({ path: (p) => paths[p] })),\n      sections,\n    ),\n  )\n\nconst useTabStyles = M.makeStyles((t) => ({\n  root: {\n    minHeight: t.spacing(8),\n    minWidth: 120,\n  },\n}))\n\nfunction NavTab(props) {\n  const classes = useTabStyles()\n  return <M.Tab classes={classes} component={RR.Link} {...props} />\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  appBar: {\n    backgroundColor: t.palette.common.white,\n    color: t.palette.getContrastText(t.palette.common.white),\n  },\n}))\n\nfunction AdminLayout({ section = false, children }) {\n  const { urls } = NamedRoutes.use()\n  const classes = useStyles()\n  return (\n    <Layout\n      pre={\n        <>\n          <M.AppBar position=\"static\" className={classes.appBar}>\n            <M.Tabs value={section} centered>\n              <NavTab label=\"Users and roles\" value=\"users\" to={urls.adminUsers()} />\n              <NavTab label=\"Buckets\" value=\"buckets\" to={urls.adminBuckets()} />\n              <NavTab label=\"Settings\" value=\"settings\" to={urls.adminSettings()} />\n            </M.Tabs>\n          </M.AppBar>\n          <M.Container maxWidth=\"lg\">{children}</M.Container>\n        </>\n      }\n    />\n  )\n}\n\nexport default function Admin({ location }) {\n  const { paths } = NamedRoutes.use()\n  return (\n    <AdminLayout section={getAdminSection(paths)(location.pathname)}>\n      <RR.Switch>\n        <RR.Route path={paths.adminUsers} component={UsersAndRoles} exact strict />\n        <RR.Route path={paths.adminBuckets} component={Buckets} exact />\n        <RR.Route path={paths.adminSettings} component={Settings} exact />\n        <RR.Route component={ThrowNotFound} />\n      </RR.Switch>\n    </AdminLayout>\n  )\n}\n"],"names":["SuspensePlaceholder","Placeholder","color","UsersAndRoles","Buckets","Settings","sections","users","path","exact","buckets","settings","getAdminSection","paths","cases","variants","concat","map","p","pathname","Object","entries","section","opts","useTabStyles","t","root","minHeight","spacing","minWidth","NavTab","props","classes","component","useStyles","appBar","backgroundColor","palette","common","white","getContrastText","AdminLayout","children","urls","NamedRoutes","Layout","pre","position","className","value","centered","label","to","adminUsers","adminBuckets","adminSettings","maxWidth","Admin","location","strict"],"sourceRoot":""}