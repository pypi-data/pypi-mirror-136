{"version":3,"file":"868.06d57e5ed32111b93f40.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/@material-ui/core/esm/Tooltip/Tooltip.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { fade } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/unstable_useId';\nimport setRef from '../utils/setRef';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the Popper component. */\n    popper: {\n      zIndex: theme.zIndex.tooltip,\n      pointerEvents: 'none' // disable jss-rtl plugin\n\n    },\n\n    /* Styles applied to the Popper component if `interactive={true}`. */\n    popperInteractive: {\n      pointerEvents: 'auto'\n    },\n\n    /* Styles applied to the Popper component if `arrow={true}`. */\n    popperArrow: arrowGenerator(),\n\n    /* Styles applied to the tooltip (label wrapper) element. */\n    tooltip: {\n      backgroundColor: fade(theme.palette.grey[700], 0.9),\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.common.white,\n      fontFamily: theme.typography.fontFamily,\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(10),\n      lineHeight: \"\".concat(round(14 / 10), \"em\"),\n      maxWidth: 300,\n      wordWrap: 'break-word',\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n    tooltipArrow: {\n      position: 'relative',\n      margin: '0'\n    },\n\n    /* Styles applied to the arrow element. */\n    arrow: {\n      overflow: 'hidden',\n      position: 'absolute',\n      width: '1em',\n      height: '0.71em'\n      /* = width / sqrt(2) = (length of the hypotenuse) */\n      ,\n      boxSizing: 'border-box',\n      color: fade(theme.palette.grey[700], 0.9),\n      '&::before': {\n        content: '\"\"',\n        margin: 'auto',\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'currentColor',\n        transform: 'rotate(45deg)'\n      }\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n    touch: {\n      padding: '8px 16px',\n      fontSize: theme.typography.pxToRem(14),\n      lineHeight: \"\".concat(round(16 / 14), \"em\"),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n    tooltipPlacementLeft: _defineProperty({\n      transformOrigin: 'right center',\n      margin: '0 24px '\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n    tooltipPlacementRight: _defineProperty({\n      transformOrigin: 'left center',\n      margin: '0 24px'\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n    tooltipPlacementTop: _defineProperty({\n      transformOrigin: 'center bottom',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n    tooltipPlacementBottom: _defineProperty({\n      transformOrigin: 'center top',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    })\n  };\n};\nvar hystersisOpen = false;\nvar hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\nvar Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  var _props$arrow = props.arrow,\n      arrow = _props$arrow === void 0 ? false : _props$arrow,\n      children = props.children,\n      classes = props.classes,\n      _props$disableFocusLi = props.disableFocusListener,\n      disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi,\n      _props$disableHoverLi = props.disableHoverListener,\n      disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi,\n      _props$disableTouchLi = props.disableTouchListener,\n      disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi,\n      _props$enterDelay = props.enterDelay,\n      enterDelay = _props$enterDelay === void 0 ? 100 : _props$enterDelay,\n      _props$enterNextDelay = props.enterNextDelay,\n      enterNextDelay = _props$enterNextDelay === void 0 ? 0 : _props$enterNextDelay,\n      _props$enterTouchDela = props.enterTouchDelay,\n      enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela,\n      idProp = props.id,\n      _props$interactive = props.interactive,\n      interactive = _props$interactive === void 0 ? false : _props$interactive,\n      _props$leaveDelay = props.leaveDelay,\n      leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay,\n      _props$leaveTouchDela = props.leaveTouchDelay,\n      leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottom' : _props$placement,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      PopperProps = props.PopperProps,\n      title = props.title,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"arrow\", \"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(),\n      childNode = _React$useState[0],\n      setChildNode = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      arrowRef = _React$useState2[0],\n      setArrowRef = _React$useState2[1];\n\n  var ignoreNonTouchEvents = React.useRef(false);\n  var closeTimer = React.useRef();\n  var enterTimer = React.useRef();\n  var leaveTimer = React.useRef();\n  var touchTimer = React.useRef();\n\n  var _useControlled = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      openState = _useControlled2[0],\n      setOpenState = _useControlled2[1];\n\n  var open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var _React$useRef = React.useRef(openProp !== undefined),\n        isControlled = _React$useRef.current; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n    React.useEffect(function () {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  var id = useId(idProp);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  var handleOpen = function handleOpen(event) {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleEnter = function handleEnter() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      var childrenProps = children.props;\n\n      if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) {\n        childrenProps.onMouseOver(event);\n      }\n\n      if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n        return;\n      } // Remove the title ahead of time.\n      // We don't want to wait for the next render commit.\n      // We would risk displaying two tooltips at the same time (native + this one).\n\n\n      if (childNode) {\n        childNode.removeAttribute('title');\n      }\n\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n\n      if (enterDelay || hystersisOpen && enterNextDelay) {\n        event.persist();\n        enterTimer.current = setTimeout(function () {\n          handleOpen(event);\n        }, hystersisOpen ? enterNextDelay : enterDelay);\n      } else {\n        handleOpen(event);\n      }\n    };\n  };\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState3 = React.useState(false),\n      childIsFocusVisible = _React$useState3[0],\n      setChildIsFocusVisible = _React$useState3[1];\n\n  var handleBlur = function handleBlur() {\n    if (childIsFocusVisible) {\n      setChildIsFocusVisible(false);\n      onBlurVisible();\n    }\n  };\n\n  var handleFocus = function handleFocus() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      // Workaround for https://github.com/facebook/react/issues/7769\n      // The autoFocus of React might trigger the event before the componentDidMount.\n      // We need to account for this eventuality.\n      if (!childNode) {\n        setChildNode(event.currentTarget);\n      }\n\n      if (isFocusVisible(event)) {\n        setChildIsFocusVisible(true);\n        handleEnter()(event);\n      }\n\n      var childrenProps = children.props;\n\n      if (childrenProps.onFocus && forward) {\n        childrenProps.onFocus(event);\n      }\n    };\n  };\n\n  var handleClose = function handleClose(event) {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(function () {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(function () {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  };\n\n  var handleLeave = function handleLeave() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      var childrenProps = children.props;\n\n      if (event.type === 'blur') {\n        if (childrenProps.onBlur && forward) {\n          childrenProps.onBlur(event);\n        }\n\n        handleBlur();\n      }\n\n      if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) {\n        childrenProps.onMouseLeave(event);\n      }\n\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      event.persist();\n      leaveTimer.current = setTimeout(function () {\n        handleClose(event);\n      }, leaveDelay);\n    };\n  };\n\n  var detectTouchStart = function detectTouchStart(event) {\n    ignoreNonTouchEvents.current = true;\n    var childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  var handleTouchStart = function handleTouchStart(event) {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(function () {\n      handleEnter()(event);\n    }, enterTouchDelay);\n  };\n\n  var handleTouchEnd = function handleTouchEnd(event) {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(function () {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  var handleUseRef = useForkRef(setChildNode, ref);\n  var handleFocusRef = useForkRef(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    setRef(handleFocusRef, ReactDOM.findDOMNode(instance));\n  }, [handleFocusRef]);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  } // For accessibility and SEO concerns, we render the title to the DOM node when\n  // the tooltip is hidden. However, we have made a tradeoff when\n  // `disableHoverListener` is set. This title logic is disabled.\n  // It's allowing us to keep the implementation size minimal.\n  // We are open to change the tradeoff.\n\n\n  var shouldShowNativeTitle = !open && !disableHoverListener;\n\n  var childrenProps = _extends({\n    'aria-describedby': open ? id : null,\n    title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n  }, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  });\n\n  var interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = handleEnter();\n    childrenProps.onMouseLeave = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onMouseOver = handleEnter(false);\n      interactiveWrapperListeners.onMouseLeave = handleLeave(false);\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = handleFocus();\n    childrenProps.onBlur = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onFocus = handleFocus(false);\n      interactiveWrapperListeners.onBlur = handleLeave(false);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', \"Remove this title prop `\".concat(children.props.title, \"` or the Tooltip component.\")].join('\\n'));\n    }\n  }\n\n  var mergedPopperProps = React.useMemo(function () {\n    return deepmerge({\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }, PopperProps);\n  }, [arrowRef, PopperProps]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/React.createElement(PopperComponent, _extends({\n    className: clsx(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: childNode,\n    open: childNode ? open : false,\n    id: childrenProps['aria-describedby'],\n    transition: true\n  }, interactiveWrapperListeners, mergedPopperProps), function (_ref) {\n    var placementInner = _ref.placement,\n        TransitionPropsInner = _ref.TransitionProps;\n    return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n      timeout: theme.transitions.duration.shorter\n    }, TransitionPropsInner, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx(classes.tooltip, classes[\"tooltipPlacement\".concat(capitalize(placementInner.split('-')[0]))], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)\n    }, title, arrow ? /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.arrow,\n      ref: setArrowRef\n    }) : null));\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);"],"names":["round","value","Math","hystersisOpen","hystersisTimer","Tooltip","props","ref","_props$arrow","arrow","children","classes","_props$disableFocusLi","disableFocusListener","_props$disableHoverLi","disableHoverListener","_props$disableTouchLi","disableTouchListener","_props$enterDelay","enterDelay","_props$enterNextDelay","enterNextDelay","_props$enterTouchDela","enterTouchDelay","idProp","id","_props$interactive","interactive","_props$leaveDelay","leaveDelay","_props$leaveTouchDela","leaveTouchDelay","onClose","onOpen","openProp","open","_props$placement","placement","_props$PopperComponen","PopperComponent","PopperProps","title","_props$TransitionComp","TransitionComponent","TransitionProps","other","theme","_React$useState","childNode","setChildNode","_React$useState2","arrowRef","setArrowRef","ignoreNonTouchEvents","closeTimer","enterTimer","leaveTimer","touchTimer","_useControlled","controlled","default","name","state","_useControlled2","openState","setOpenState","clearTimeout","current","handleOpen","event","handleEnter","forward","arguments","length","undefined","childrenProps","type","onMouseOver","removeAttribute","persist","setTimeout","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState3","childIsFocusVisible","setChildIsFocusVisible","handleBlur","handleFocus","currentTarget","onFocus","handleClose","transitions","duration","shortest","handleLeave","onBlur","onMouseLeave","detectTouchStart","onTouchStart","handleUseRef","handleFocusRef","handleOwnRef","instance","handleRef","shouldShowNativeTitle","className","interactiveWrapperListeners","onTouchEnd","mergedPopperProps","popperOptions","modifiers","enabled","Boolean","element","popper","popperInteractive","popperArrow","anchorEl","transition","_ref","placementInner","TransitionPropsInner","timeout","shorter","tooltip","concat","split","touch","tooltipArrow","zIndex","pointerEvents","top","left","marginTop","marginLeft","marginRight","transformOrigin","bottom","marginBottom","height","width","right","backgroundColor","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","lineHeight","maxWidth","wordWrap","fontWeight","fontWeightMedium","position","margin","overflow","boxSizing","content","display","transform","fontWeightRegular","tooltipPlacementLeft","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","flip"],"sourceRoot":""}