{"version":3,"file":"1254.38c3b25fadadaee3fe18.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./app/containers/Admin/Form.tsx","webpack://quilt-navigator/./app/containers/Admin/Settings.tsx","webpack://quilt-navigator/./app/containers/Bucket/PackageDialog/SubmitSpinner.tsx"],"sourcesContent":["import * as React from 'react'\nimport type * as RF from 'react-final-form'\nimport * as M from '@material-ui/core'\n\ninterface FieldProps {\n  errors: Record<string, React.ReactNode>\n  input: RF.FieldInputProps<string>\n  meta: RF.FieldMetaState<string>\n}\n\nexport function Field({\n  input,\n  meta,\n  errors,\n  helperText,\n  InputLabelProps,\n  ...rest\n}: FieldProps & M.TextFieldProps) {\n  const error = meta.submitFailed && (meta.error || meta.submitError)\n  const props = {\n    error: !!error,\n    helperText: error ? errors[error] || error : helperText,\n    disabled: meta.submitting || meta.submitSucceeded,\n    InputLabelProps: { shrink: true, ...InputLabelProps },\n    ...input,\n    ...rest,\n  }\n  return <M.TextField {...props} />\n}\n\nconst useCheckboxStyles = M.makeStyles({\n  root: {\n    marginBottom: -9,\n    marginTop: -9,\n  },\n})\n\ninterface CheckboxProps {\n  errors?: Record<string, React.ReactNode>\n  input?: RF.FieldInputProps<boolean>\n  meta: RF.FieldMetaState<string | Symbol>\n  label?: string\n  FormControlLabelProps?: M.FormControlLabelProps\n}\n\nexport function Checkbox({\n  input = {} as RF.FieldInputProps<boolean>,\n  meta,\n  errors = undefined, // eslint-disable-line @typescript-eslint/no-unused-vars\n  label = undefined,\n  FormControlLabelProps = {} as M.FormControlLabelProps,\n  ...rest\n}: CheckboxProps & M.CheckboxProps) {\n  const classes = useCheckboxStyles()\n  return (\n    <M.FormControlLabel\n      {...FormControlLabelProps}\n      control={\n        <M.Checkbox\n          classes={classes}\n          disabled={meta.submitting || meta.submitSucceeded}\n          {...input}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  )\n}\n\nconst useFormErrorStyles = M.makeStyles((t) => ({\n  root: {\n    marginTop: t.spacing(3),\n\n    '& a': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\ninterface FormErrorProps {\n  errors: Record<string, React.ReactNode>\n  error?: string\n}\n\nexport function FormError({\n  error,\n  errors,\n  ...rest\n}: FormErrorProps & M.TypographyProps) {\n  const classes = useFormErrorStyles()\n  if (!error) return null\n  return (\n    <M.Typography color=\"error\" classes={classes} {...rest}>\n      {errors[error] || error}\n    </M.Typography>\n  )\n}\n","import * as FF from 'final-form'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport * as RF from 'react-final-form'\nimport * as M from '@material-ui/core'\n\nimport SubmitSpinner from 'containers/Bucket/PackageDialog/SubmitSpinner'\nimport * as Notifications from 'containers/Notifications'\nimport * as CatalogSettings from 'utils/CatalogSettings'\nimport * as validators from 'utils/validators'\n\nimport * as Form from './Form'\n\nconst useNavLinkEditorStyles = M.makeStyles((t) => ({\n  actions: {\n    alignItems: 'center',\n    display: 'flex',\n    marginTop: t.spacing(1),\n  },\n  field: {\n    display: 'flex',\n  },\n  fieldName: {\n    ...t.typography.body2,\n    flexShrink: 0,\n    fontWeight: t.typography.fontWeightMedium,\n    width: 50,\n  },\n  fieldValue: {\n    ...t.typography.body2,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  progress: {\n    marginLeft: t.spacing(1),\n  },\n  notConfigured: {\n    ...t.typography.body1,\n    marginRight: t.spacing(2),\n  },\n}))\n\nfunction NavLinkEditor() {\n  const settings = CatalogSettings.use()\n  const writeSettings = CatalogSettings.useWriteSettings()\n\n  const { push } = Notifications.use()\n\n  const classes = useNavLinkEditorStyles()\n\n  const [editing, setEditing] = React.useState(false)\n  const [formKey, setFormKey] = React.useState(1)\n  const [removing, setRemoving] = React.useState(false)\n\n  const edit = React.useCallback(() => {\n    if (removing) return\n    setEditing(true)\n  }, [removing])\n\n  const cancel = React.useCallback(() => {\n    setEditing(false)\n  }, [])\n\n  const handleExited = React.useCallback(() => {\n    // reset the form\n    setFormKey(R.inc)\n  }, [])\n\n  const remove = React.useCallback(async () => {\n    if (editing || removing || !settings?.customNavLink) return\n    // XXX: implement custom MUI Dialog-based confirm?\n    // eslint-disable-next-line no-restricted-globals, no-alert\n    if (!confirm('You are about to remove custom link')) return\n    setRemoving(true)\n    try {\n      await writeSettings(R.dissoc('customNavLink', settings))\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error saving settings:')\n      // eslint-disable-next-line no-console\n      console.error(e)\n      push(\"Couldn't save settings, see console for details\")\n    } finally {\n      setRemoving(false)\n    }\n  }, [editing, removing, settings, writeSettings, push])\n\n  const onSubmit = React.useCallback(\n    async (values: { url: string; label: string }) => {\n      try {\n        await writeSettings({\n          ...settings,\n          customNavLink: { url: values.url, label: values.label },\n        })\n        setEditing(false)\n        return undefined\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Error saving settings:')\n        // eslint-disable-next-line no-console\n        console.error(e)\n        return { [FF.FORM_ERROR]: \"Couldn't save settings, see console for details\" }\n      }\n    },\n    [settings, writeSettings],\n  )\n\n  return (\n    <>\n      {settings?.customNavLink ? (\n        <>\n          <div className={classes.field}>\n            <div className={classes.fieldName}>URL:</div>\n            <div className={classes.fieldValue}>{settings.customNavLink.url}</div>\n          </div>\n          <div className={classes.field}>\n            <div className={classes.fieldName}>Label:</div>\n            <div className={classes.fieldValue}>{settings.customNavLink.label}</div>\n          </div>\n          <div className={classes.actions}>\n            <M.Button\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={edit}\n              disabled={removing}\n            >\n              Edit\n            </M.Button>\n            <M.Box pl={1} />\n            <M.Button color=\"primary\" size=\"small\" onClick={remove} disabled={removing}>\n              Remove\n            </M.Button>\n            {removing && <M.CircularProgress size={24} className={classes.progress} />}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className={classes.notConfigured}>Not configured</div>\n          <div className={classes.actions}>\n            <M.Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={edit}>\n              Configure link\n            </M.Button>\n          </div>\n        </>\n      )}\n      <M.Dialog open={editing} onExited={handleExited} fullWidth>\n        <RF.Form onSubmit={onSubmit} key={formKey}>\n          {({\n            handleSubmit,\n            submitting,\n            submitFailed,\n            submitError,\n            error,\n            hasValidationErrors,\n          }) => (\n            <>\n              <M.DialogTitle>Configure custom link</M.DialogTitle>\n              <M.DialogContent>\n                <form onSubmit={handleSubmit}>\n                  <RF.Field\n                    component={Form.Field}\n                    initialValue={settings?.customNavLink?.url || ''}\n                    name=\"url\"\n                    label=\"URL\"\n                    placeholder=\"e.g. https://example.com/path\"\n                    validate={validators.required as FF.FieldValidator<string>}\n                    errors={{\n                      required: 'Enter URL to link to',\n                    }}\n                    disabled={submitting}\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                  />\n                  <M.Box pt={2} />\n                  <RF.Field\n                    component={Form.Field}\n                    initialValue={settings?.customNavLink?.label || ''}\n                    name=\"label\"\n                    label=\"Label\"\n                    placeholder=\"Enter link label\"\n                    validate={validators.required as FF.FieldValidator<string>}\n                    errors={{\n                      required: 'Enter link label',\n                    }}\n                    disabled={submitting}\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                  />\n                  <input type=\"submit\" style={{ display: 'none' }} />\n                </form>\n              </M.DialogContent>\n              <M.DialogActions>\n                {submitting ? (\n                  <SubmitSpinner />\n                ) : (\n                  (!!error || !!submitError) && (\n                    <M.Box flexGrow={1} display=\"flex\" alignItems=\"center\" pl={2}>\n                      <M.Icon color=\"error\">error_outline</M.Icon>\n                      <M.Box pl={1} />\n                      <M.Typography variant=\"body2\" color=\"error\">\n                        {error || submitError}\n                      </M.Typography>\n                    </M.Box>\n                  )\n                )}\n\n                <M.Button\n                  type=\"submit\"\n                  onClick={handleSubmit}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={submitting || (submitFailed && hasValidationErrors)}\n                >\n                  Save\n                </M.Button>\n                <M.Button onClick={cancel} disabled={submitting}>\n                  Cancel\n                </M.Button>\n              </M.DialogActions>\n            </>\n          )}\n        </RF.Form>\n      </M.Dialog>\n    </>\n  )\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  sectionHeading: {\n    ...t.typography.body1,\n    fontWeight: t.typography.fontWeightMedium,\n    marginBottom: t.spacing(1),\n  },\n}))\n\nexport default function Settings() {\n  const classes = useStyles()\n  return (\n    <M.Box mt={2} mb={2}>\n      <M.Paper>\n        <M.Box px={3} pt={2} pb={1}>\n          <M.Typography variant=\"h6\">Catalog Customization</M.Typography>\n        </M.Box>\n        <M.Box px={3} pb={2}>\n          <div className={classes.sectionHeading}>Custom navbar link</div>\n          <React.Suspense fallback={<M.CircularProgress />}>\n            <NavLinkEditor />\n          </React.Suspense>\n        </M.Box>\n      </M.Paper>\n    </M.Box>\n  )\n}\n","import * as R from 'ramda'\nimport * as React from 'react'\n\nimport * as M from '@material-ui/core'\n\nimport Delay from 'utils/Delay'\n\ninterface SubmitSpinnerProps {\n  children?: React.ReactNode\n  value?: number\n}\n\nexport default function SubmitSpinner({ children, value }: SubmitSpinnerProps) {\n  const hasValue = R.is(Number, value) && value! < 100\n\n  return (\n    <Delay ms={200} alwaysRender>\n      {(ready) => (\n        <M.Fade in={ready}>\n          <M.Box flexGrow={1} display=\"flex\" alignItems=\"center\" pl={2}>\n            <M.CircularProgress\n              size={24}\n              variant={hasValue ? 'determinate' : 'indeterminate'}\n              value={hasValue ? value! * 0.9 : undefined}\n            />\n\n            {!!children && (\n              <>\n                <M.Box pl={1} />\n\n                <M.Typography variant=\"body2\" color=\"textSecondary\">\n                  {children}\n                </M.Typography>\n              </>\n            )}\n          </M.Box>\n        </M.Fade>\n      )}\n    </Delay>\n  )\n}\n"],"names":["Field","input","meta","errors","helperText","InputLabelProps","rest","error","submitFailed","submitError","props","disabled","submitting","submitSucceeded","shrink","useCheckboxStyles","root","marginBottom","marginTop","Checkbox","label","undefined","FormControlLabelProps","classes","control","useFormErrorStyles","t","spacing","textDecoration","FormError","color","useNavLinkEditorStyles","actions","alignItems","display","field","fieldName","typography","body2","flexShrink","fontWeight","fontWeightMedium","width","fieldValue","overflow","textOverflow","whiteSpace","progress","marginLeft","notConfigured","body1","marginRight","NavLinkEditor","settings","writeSettings","push","editing","setEditing","formKey","setFormKey","removing","setRemoving","edit","cancel","handleExited","remove","customNavLink","confirm","console","warn","onSubmit","values","url","className","variant","size","onClick","pl","open","onExited","fullWidth","key","handleSubmit","hasValidationErrors","component","initialValue","name","placeholder","validate","required","pt","type","style","flexGrow","useStyles","sectionHeading","Settings","mt","mb","px","pb","fallback","SubmitSpinner","children","value","hasValue","Number","ms","alwaysRender","ready","in"],"sourceRoot":""}