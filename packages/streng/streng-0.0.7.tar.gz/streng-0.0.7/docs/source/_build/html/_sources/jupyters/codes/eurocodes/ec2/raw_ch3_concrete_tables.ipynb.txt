{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Eurocode 2 - Chapter 3 - Concrete tables"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from numpy import vectorize\n",
        "import matplotlib.pyplot as plt\n",
        "\nfrom streng.codes.eurocodes.ec2.raw.ch3.concrete import strength, stress_strain"
      ],
      "outputs": [],
      "execution_count": 1,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "fck = np.array([12., 16. ,20., 25., 30., 35., 35., 40., 45., 50., 55., 60., 70., 80., 90.])"
      ],
      "outputs": [],
      "execution_count": 2,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "fcm = strength.fcm(fck)\n",
        "vfctm = vectorize(strength.fctm)\n",
        "vfctk005 = vectorize(strength.fctk005)\n",
        "vfctk095 = vectorize(strength.fctk095)\n",
        "\n",
        "fctm = vfctm(fck)\n",
        "fctk005 = vfctk005(fck)\n",
        "fctk095 = vfctk095(fck)"
      ],
      "outputs": [],
      "execution_count": 3,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "dict_strengths = {\"fck\": fck, \"fcm\": fcm.round(2), \"fctm\": fctm.round(2),\n",
        "                  \"fctk005\": fctk005.round(2), \"fctk095\": fctk095.round(2)} "
      ],
      "outputs": [],
      "execution_count": 4,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "strengths_table = pd.DataFrame(dict_strengths)\n",
        "strengths_table"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 5,
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fck</th>\n",
              "      <th>fcm</th>\n",
              "      <th>fctm</th>\n",
              "      <th>fctk005</th>\n",
              "      <th>fctk095</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>12.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>1.57</td>\n",
              "      <td>1.10</td>\n",
              "      <td>2.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>16.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.33</td>\n",
              "      <td>2.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>20.0</td>\n",
              "      <td>28.0</td>\n",
              "      <td>2.21</td>\n",
              "      <td>1.55</td>\n",
              "      <td>2.87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>25.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>2.56</td>\n",
              "      <td>1.80</td>\n",
              "      <td>3.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>30.0</td>\n",
              "      <td>38.0</td>\n",
              "      <td>2.90</td>\n",
              "      <td>2.03</td>\n",
              "      <td>3.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>35.0</td>\n",
              "      <td>43.0</td>\n",
              "      <td>3.21</td>\n",
              "      <td>2.25</td>\n",
              "      <td>4.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>35.0</td>\n",
              "      <td>43.0</td>\n",
              "      <td>3.21</td>\n",
              "      <td>2.25</td>\n",
              "      <td>4.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>40.0</td>\n",
              "      <td>48.0</td>\n",
              "      <td>3.51</td>\n",
              "      <td>2.46</td>\n",
              "      <td>4.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>45.0</td>\n",
              "      <td>53.0</td>\n",
              "      <td>3.80</td>\n",
              "      <td>2.66</td>\n",
              "      <td>4.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>50.0</td>\n",
              "      <td>58.0</td>\n",
              "      <td>4.07</td>\n",
              "      <td>2.85</td>\n",
              "      <td>5.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>55.0</td>\n",
              "      <td>63.0</td>\n",
              "      <td>4.21</td>\n",
              "      <td>2.95</td>\n",
              "      <td>5.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>60.0</td>\n",
              "      <td>68.0</td>\n",
              "      <td>4.35</td>\n",
              "      <td>3.05</td>\n",
              "      <td>5.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>70.0</td>\n",
              "      <td>78.0</td>\n",
              "      <td>4.61</td>\n",
              "      <td>3.23</td>\n",
              "      <td>5.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>80.0</td>\n",
              "      <td>88.0</td>\n",
              "      <td>4.84</td>\n",
              "      <td>3.39</td>\n",
              "      <td>6.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>90.0</td>\n",
              "      <td>98.0</td>\n",
              "      <td>5.04</td>\n",
              "      <td>3.53</td>\n",
              "      <td>6.56</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     fck   fcm  fctm  fctk005  fctk095\n",
              "0   12.0  20.0  1.57     1.10     2.04\n",
              "1   16.0  24.0  1.90     1.33     2.48\n",
              "2   20.0  28.0  2.21     1.55     2.87\n",
              "3   25.0  33.0  2.56     1.80     3.33\n",
              "4   30.0  38.0  2.90     2.03     3.77\n",
              "5   35.0  43.0  3.21     2.25     4.17\n",
              "6   35.0  43.0  3.21     2.25     4.17\n",
              "7   40.0  48.0  3.51     2.46     4.56\n",
              "8   45.0  53.0  3.80     2.66     4.93\n",
              "9   50.0  58.0  4.07     2.85     5.29\n",
              "10  55.0  63.0  4.21     2.95     5.48\n",
              "11  60.0  68.0  4.35     3.05     5.66\n",
              "12  70.0  78.0  4.61     3.23     5.99\n",
              "13  80.0  88.0  4.84     3.39     6.29\n",
              "14  90.0  98.0  5.04     3.53     6.56"
            ]
          },
          "metadata": {}
        }
      ],
      "execution_count": 5,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "inverted_strengths_table = strengths_table.T\n",
        "inverted_strengths_table"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 6,
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>fck</th>\n",
              "      <td>12.00</td>\n",
              "      <td>16.00</td>\n",
              "      <td>20.00</td>\n",
              "      <td>25.00</td>\n",
              "      <td>30.00</td>\n",
              "      <td>35.00</td>\n",
              "      <td>35.00</td>\n",
              "      <td>40.00</td>\n",
              "      <td>45.00</td>\n",
              "      <td>50.00</td>\n",
              "      <td>55.00</td>\n",
              "      <td>60.00</td>\n",
              "      <td>70.00</td>\n",
              "      <td>80.00</td>\n",
              "      <td>90.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fcm</th>\n",
              "      <td>20.00</td>\n",
              "      <td>24.00</td>\n",
              "      <td>28.00</td>\n",
              "      <td>33.00</td>\n",
              "      <td>38.00</td>\n",
              "      <td>43.00</td>\n",
              "      <td>43.00</td>\n",
              "      <td>48.00</td>\n",
              "      <td>53.00</td>\n",
              "      <td>58.00</td>\n",
              "      <td>63.00</td>\n",
              "      <td>68.00</td>\n",
              "      <td>78.00</td>\n",
              "      <td>88.00</td>\n",
              "      <td>98.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fctm</th>\n",
              "      <td>1.57</td>\n",
              "      <td>1.90</td>\n",
              "      <td>2.21</td>\n",
              "      <td>2.56</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.51</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.35</td>\n",
              "      <td>4.61</td>\n",
              "      <td>4.84</td>\n",
              "      <td>5.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fctk005</th>\n",
              "      <td>1.10</td>\n",
              "      <td>1.33</td>\n",
              "      <td>1.55</td>\n",
              "      <td>1.80</td>\n",
              "      <td>2.03</td>\n",
              "      <td>2.25</td>\n",
              "      <td>2.25</td>\n",
              "      <td>2.46</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.85</td>\n",
              "      <td>2.95</td>\n",
              "      <td>3.05</td>\n",
              "      <td>3.23</td>\n",
              "      <td>3.39</td>\n",
              "      <td>3.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fctk095</th>\n",
              "      <td>2.04</td>\n",
              "      <td>2.48</td>\n",
              "      <td>2.87</td>\n",
              "      <td>3.33</td>\n",
              "      <td>3.77</td>\n",
              "      <td>4.17</td>\n",
              "      <td>4.17</td>\n",
              "      <td>4.56</td>\n",
              "      <td>4.93</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.66</td>\n",
              "      <td>5.99</td>\n",
              "      <td>6.29</td>\n",
              "      <td>6.56</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            0      1      2      3      4      5      6      7      8      9   \\\n",
              "fck      12.00  16.00  20.00  25.00  30.00  35.00  35.00  40.00  45.00  50.00   \n",
              "fcm      20.00  24.00  28.00  33.00  38.00  43.00  43.00  48.00  53.00  58.00   \n",
              "fctm      1.57   1.90   2.21   2.56   2.90   3.21   3.21   3.51   3.80   4.07   \n",
              "fctk005   1.10   1.33   1.55   1.80   2.03   2.25   2.25   2.46   2.66   2.85   \n",
              "fctk095   2.04   2.48   2.87   3.33   3.77   4.17   4.17   4.56   4.93   5.29   \n",
              "\n",
              "            10     11     12     13     14  \n",
              "fck      55.00  60.00  70.00  80.00  90.00  \n",
              "fcm      63.00  68.00  78.00  88.00  98.00  \n",
              "fctm      4.21   4.35   4.61   4.84   5.04  \n",
              "fctk005   2.95   3.05   3.23   3.39   3.53  \n",
              "fctk095   5.48   5.66   5.99   6.29   6.56  "
            ]
          },
          "metadata": {}
        }
      ],
      "execution_count": 6,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots()\n",
        "\n",
        "line0, = ax.plot(fck, fck, '--', linewidth=2,\n",
        "                 label='fck')\n",
        "line1, = ax.plot(fck, fcm, '--', linewidth=2,\n",
        "                 label='fcm')\n",
        "line2, = ax.plot(fck, fctm, dashes=[30, 5, 10, 5],\n",
        "                 label='fctm')\n",
        "line3, = ax.plot(fck, fctk005, dashes=[30, 5, 10, 5],\n",
        "                 label='fctk005')\n",
        "line4, = ax.plot(fck, fctk095, \n",
        "                 label='fctk095')\n",
        "ax.legend(loc='right')\n",
        "ax.grid(True)\n",
        "plt.show()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": [
              "\n"
            ],
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "execution_count": 7,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "vεc1 = vectorize(stress_strain.εc1)\n",
        "vεc2 = vectorize(stress_strain.εc2)\n",
        "vεc3 = vectorize(stress_strain.εc3)\n",
        "vεcu1 = vectorize(stress_strain.εcu1)\n",
        "vεcu2 = vectorize(stress_strain.εcu2)\n",
        "vεcu3 = vectorize(stress_strain.εcu3)\n",
        "vn = vectorize(stress_strain.n)\n",
        "\n",
        "εc1 = vεc1(fck)\n",
        "εc2 = vεc2(fck)\n",
        "εc3 = vεc3(fck)\n",
        "εcu1 = vεcu1(fck)\n",
        "εcu2 = vεcu2(fck)\n",
        "εcu3 = vεcu3(fck)\n",
        "n = vn(fck)"
      ],
      "outputs": [],
      "execution_count": 8,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "dict_strains = {\"fck\": fck, \"εc1\": εc1.round(2), \"εc2\": εc2.round(2), \"εc3\": εc3.round(2),\n",
        "                \"εcu1\": εcu1.round(2), \"εcu2\": εcu2.round(2), \"εcu3\": εcu3.round(2),\n",
        "                \"n\": n.round(2)} "
      ],
      "outputs": [],
      "execution_count": 9,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "strains_table = pd.DataFrame(dict_strains)\n",
        "strains_table"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 10,
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fck</th>\n",
              "      <th>εc1</th>\n",
              "      <th>εc2</th>\n",
              "      <th>εc3</th>\n",
              "      <th>εcu1</th>\n",
              "      <th>εcu2</th>\n",
              "      <th>εcu3</th>\n",
              "      <th>n</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>12.0</td>\n",
              "      <td>1.77</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>16.0</td>\n",
              "      <td>1.87</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>20.0</td>\n",
              "      <td>1.97</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>25.0</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>30.0</td>\n",
              "      <td>2.16</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>35.0</td>\n",
              "      <td>2.25</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>35.0</td>\n",
              "      <td>2.25</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>40.0</td>\n",
              "      <td>2.32</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>45.0</td>\n",
              "      <td>2.40</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>50.0</td>\n",
              "      <td>2.46</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3.49</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>55.0</td>\n",
              "      <td>2.53</td>\n",
              "      <td>2.20</td>\n",
              "      <td>1.82</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.13</td>\n",
              "      <td>3.13</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>60.0</td>\n",
              "      <td>2.59</td>\n",
              "      <td>2.29</td>\n",
              "      <td>1.89</td>\n",
              "      <td>3.02</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.88</td>\n",
              "      <td>1.59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>70.0</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.42</td>\n",
              "      <td>2.02</td>\n",
              "      <td>2.84</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.66</td>\n",
              "      <td>1.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>80.0</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.52</td>\n",
              "      <td>2.16</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.60</td>\n",
              "      <td>1.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>90.0</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.30</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.60</td>\n",
              "      <td>1.40</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     fck   εc1   εc2   εc3  εcu1  εcu2  εcu3     n\n",
              "0   12.0  1.77  2.00  1.75  3.50  3.50  3.50  2.00\n",
              "1   16.0  1.87  2.00  1.75  3.50  3.50  3.50  2.00\n",
              "2   20.0  1.97  2.00  1.75  3.50  3.50  3.50  2.00\n",
              "3   25.0  2.07  2.00  1.75  3.50  3.50  3.50  2.00\n",
              "4   30.0  2.16  2.00  1.75  3.50  3.50  3.50  2.00\n",
              "5   35.0  2.25  2.00  1.75  3.50  3.50  3.50  2.00\n",
              "6   35.0  2.25  2.00  1.75  3.50  3.50  3.50  2.00\n",
              "7   40.0  2.32  2.00  1.75  3.50  3.50  3.50  2.00\n",
              "8   45.0  2.40  2.00  1.75  3.50  3.50  3.50  2.00\n",
              "9   50.0  2.46  2.00  1.75  3.49  3.50  3.50  2.00\n",
              "10  55.0  2.53  2.20  1.82  3.21  3.13  3.13  1.75\n",
              "11  60.0  2.59  2.29  1.89  3.02  2.88  2.88  1.59\n",
              "12  70.0  2.70  2.42  2.02  2.84  2.66  2.66  1.44\n",
              "13  80.0  2.80  2.52  2.16  2.80  2.60  2.60  1.40\n",
              "14  90.0  2.80  2.60  2.30  2.80  2.60  2.60  1.40"
            ]
          },
          "metadata": {}
        }
      ],
      "execution_count": 10,
      "metadata": {}
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python",
      "version": "3.6.6",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "toc": {
      "nav_menu": {},
      "number_sections": true,
      "sideBar": true,
      "skip_h1_title": false,
      "toc_cell": false,
      "toc_position": {},
      "toc_section_display": "block",
      "toc_window_display": false
    },
    "kernel_info": {
      "name": "python3"
    },
    "nteract": {
      "version": "0.11.9"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 1
}