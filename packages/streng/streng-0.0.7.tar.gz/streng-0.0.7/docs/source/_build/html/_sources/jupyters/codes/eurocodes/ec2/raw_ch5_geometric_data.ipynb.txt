{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Eurocode 2 - Chapter 5 - Geometric data\n",
        "\nraw functions"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "## effective_width"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from streng.codes.eurocodes.ec2.raw.ch5.geometric_data import effective_width"
      ],
      "outputs": [],
      "execution_count": 1,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "![beffs](http://repfiles.kallipos.gr/html_books/1284/images/Fig_09_14.png)"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "![l0s](http://repfiles.kallipos.gr/html_books/1284/images/inter_09_01_2.png)"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "### beff"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "print(effective_width.beff.__doc__)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Effective flange width\n",
            "\n",
            "    Args:\n",
            "        bw (float): Width of the web\n",
            "        beff1 (float): Side 1 effective flange width\n",
            "        beff2 (float): Side 2 effective flange width\n",
            "        b (float): bw + b1 + b2\n",
            "\n",
            "    Returns:\n",
            "        float: Given using the expression:\n",
            "\n",
            "        .. math::\n",
            "            b_{eff}=\\sum{b_{eff,i}} + b_w \\le b\n",
            "\n",
            "    \n"
          ]
        }
      ],
      "execution_count": 3,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "beff = effective_width.beff(bw = 0.25, \n",
        "                            beff1 = 0.76,\n",
        "                            beff2 = 0.95,\n",
        "                            b = 2.5)\n",
        "\nprint(f'beff = {beff:.2f}m')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "beff = 1.96m\n"
          ]
        }
      ],
      "execution_count": 11,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "### beffi"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "print(effective_width.beffi.__doc__)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Side i effective flange width\n",
            "\n",
            "    Args:\n",
            "        bi (float): half net length between adjacent beams\n",
            "        l0 (float): Distance between points of zero moment\n",
            "\n",
            "    Returns:\n",
            "        float: Given using the expression:\n",
            "\n",
            "        .. math::\n",
            "            b_{eff,i}=0.2\\cdot b_i +0.1\\cdot l_0 \\le 0.2\\cdot l_0\n",
            "\n",
            "    \n"
          ]
        }
      ],
      "execution_count": 4,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "beffi = effective_width.beffi(bi = 2.20, l0=3.80)\n",
        "print(f'beffi = {beffi:.2f}m')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "beffi = 0.76m\n"
          ]
        }
      ],
      "execution_count": 10,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "### l0"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "print(effective_width.l0.__doc__)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Distance between points of zero moment\n",
            "\n",
            "    Args:\n",
            "        l1 (float): μήκος αμφιέρειστης ή ακραίουν ανοίγματος\n",
            "        l2 (float): μήκος μεσαίουν ανοίγματος\n",
            "        l3 (float): μήκος προβόλου\n",
            "        b (float): συνθήκες στήριξης. 0: αμφιέρειστη, 1: ακραίο άνοιγμα, 2: μεσαίο άνοιγμα, 3: μεσαία στήριξη, 4: στήριξη προβόλου\n",
            "\n",
            "    Returns:\n",
            "        float: Υποπεριπτώσεις σύμφωνα με το σχήμα\n",
            "\n\n",
            "    \n"
          ]
        }
      ],
      "execution_count": 5,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "l0_amf = effective_width.l0(l1 = 5.0, \n",
        "                            zero_moments_case=0)\n",
        "print(f'l0 αμφιέρειστης = {l0_amf:.2f}m')\n",
        "\n",
        "l0_akraio = effective_width.l0(l1 = 5.0, \n",
        "                               zero_moments_case=1)\n",
        "print(f'l0 ακραίο άνοιγμα = {l0_akraio:.2f}m')\n",
        "\n",
        "l0_mesaio = effective_width.l0(l2 = 5.0, \n",
        "                               zero_moments_case=2)\n",
        "print(f'l0 μεσαίο άνοιγμα = {l0_mesaio:.2f}m')\n",
        "\n",
        "l0_mesaia_stir = effective_width.l0(l1 = 5.0,\n",
        "                                    l2 = 5.0, \n",
        "                               zero_moments_case=3)\n",
        "print(f'l0 μεσαία στήριξη = {l0_mesaia_stir:.2f}m')\n",
        "\n",
        "l0_prov = effective_width.l0(l2 = 5.0,\n",
        "                             l3 = 1.5,\n",
        "                             zero_moments_case=4)\n",
        "print(f'l0 στήριξη προβόλου = {l0_prov:.2f}m')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "l0 αμφιέρειστης = 5.00m\n",
            "l0 ακραίο άνοιγμα = 4.25m\n",
            "l0 μεσαίο άνοιγμα = 3.50m\n",
            "l0 μεσαία στήριξη = 1.50m\n",
            "l0 στήριξη προβόλου = 2.25m\n"
          ]
        }
      ],
      "execution_count": 19,
      "metadata": {}
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python",
      "version": "3.6.6",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "toc": {
      "nav_menu": {},
      "number_sections": false,
      "sideBar": true,
      "skip_h1_title": false,
      "toc_cell": false,
      "toc_position": {},
      "toc_section_display": "block",
      "toc_window_display": true
    },
    "kernel_info": {
      "name": "python3"
    },
    "nteract": {
      "version": "0.11.9"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}