[tox]
isolated_build = true
skip_missing_interpreters = true
envlist = isort,black,bandit,mypy,pylint,debian11,upstream,coverage,doctest

[testenv]
deps = .[test]
commands = coverage run -m pytest --doctest-modules --pyargs tests

[testenv:debian11]
basepython = python3.9
deps =
    .[test]
    certbot ==1.12.0
    dnspython ==2.0.0
    requests ==2.25.1
    setuptools ==52.0.0

[testenv:upstream]
basepython = python3.10
deps =
    .[test]
    certbot ==1.22.0
    dnspython ==2.2.0
    requests ==2.27.1
    setuptools ==60.5.0

[testenv:run]
commands = certbot --config-dir=./.certbot/config --work-dir=./.certbot/work --logs-dir=./.certbot/logs {posargs}

[testenv:isort]
skip_install = true
commands = isort --check-only --diff src/

[testenv:black]
skip_install = true
commands = black --skip-string-normalization --check --diff src/

[testenv:reformat]
skip_install = true
commands =
    isort src/
    black --skip-string-normalization src/

[testenv:pylint]
skip_install = true
changedir = src/
commands = pylint {posargs} --rcfile=../setup.cfg ./certbot_acme_dns

[testenv:mypy]
commands = mypy -p certbot_acme_dns

[testenv:stubgen]
skip_install = true
commands = stubgen -o ./stubs {posargs}

[testenv:bandit]
skip_install = true
commands = bandit -r src/

[testenv:ipython]
deps = ipython
commands = ipython

[testenv:build]
skip_install = true
deps = build
commands = python3 -m build {posargs:--sdist}

[testenv:coverage]
skip_install = true
commands =
    coverage combine
    coverage report

[testenv:doctest]
commands = pytest --doctest-modules --pyargs certbot_acme_dns

[testenv:docs]
deps = .[docs]
commands = pdoc3 --force --html --output-dir ./docs certbot_acme_dns

[testenv:publish]
skip_install = True
deps = twine
commands = twine upload {posargs:--skip-existing dist/*}
