# Python内置函数
builtInFunctions = {
    '符': 'chr',
    '二进制': 'bin',
    '串': 'str',
    '八进制': 'oct',
    '符值': 'ord',
    '十六进制': 'hex',
    '元组': 'tuple',
    '长': 'len',
    '集合': 'set',
    '全为真': 'all',
    '字典': 'dict',
    '任一为真': 'any',
    '列表': 'list',
    '迭代': 'iter',
    '冻结集合': 'frozenset',
    '超类': 'super',
    '切片': 'slice',
    '乘方': 'pow',
    '字节': 'bytes',
    '排序': 'sort',
    '已排序': 'sorted',
    '全局字典': 'globals',
    '字节数组': 'bytearray',
    '局部字典': 'locals',
    '属性': 'property',
    '对象': 'object',
    '删属性': 'delattr',
    '变量字典': 'vars',
    '取属性': 'getattr',
    '可调用': 'callable',
    '有属性': 'hasattr',
    '内存视图': 'memoryview',
    '设属性': 'setattr',
    '哈希': 'hash',
    '复数': 'complex',
    '商余': 'divmod',
    '整数': 'int',
    '评估': 'eval',
    '浮点数': 'float',
    '长整数': 'long',
    '范围': 'range',
    '布尔': 'bool',
    '表示': 'repr',
    '输入': 'input',
    '打包': 'zip',
    '打印': 'print',
    '打开': 'open',
    '执行': 'exec',
    '编译': 'compile',
    '反转': 'reversed',
    '映射': 'map',
    '和': 'sum',
    '是实例': 'isinstance',
    '枚举': 'enumerate',
    '最大值': 'max',
    '断点': 'breakpoint',
    '最小值': 'min',
    '是子类': 'issubclass',
    '绝对值': 'abs',
    '下一个': 'next',
    '类型': 'type',
    '筛选': 'filter',
    '格式化': 'format',
    '静态方法': 'staticmethod',
    '舍入': 'round',
    '类方法': 'classmethod',
    '退出': 'exit',
    '帮助': 'help',
    '应用': 'apply',
    '基字符串': 'basestring',
    '缓存': 'buffer',
    '比较': 'cmp',
    '强制': 'coerce',
    '执行文件': 'execfile',
    '文件': 'file',
    '简化': 'reduce',
    '重载': 'reload',
    'repr': 'repr',
    'intern': 'intern',
    'unicode': 'unicode',
    'ascii': 'ascii',
    'id': 'id',
    'dir': 'dir',
    '__字典__': '__dict__',
    '__方法__': '__methods__',
    '__成员__': '__members__',
    '__对象__': '__class__',
    '__基类__': '__bases__',
    '__名字__': '__name__',
    '__继承__': '__mro__',
    '__子类__': '__subclasses__',
    '__初始化__': '__init__',
    '__导入__': '__import__',
    '__主函数__': '__main__',
}

# 反转字典
def invert_dict(d):
    return dict(zip(d.values(), d.keys()))

invertBuiltInFunctions = invert_dict(builtInFunctions)