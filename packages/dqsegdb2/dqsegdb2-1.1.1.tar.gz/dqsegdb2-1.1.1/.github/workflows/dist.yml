name: Distribution

on:
  push:
    branches:
      - main
      - master
      - release/**
  pull_request:
    branches:
      - main
      - master
      - release/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tarball:
    # -----------------------
    # Create the distributions for this version
    # -----------------------
    name: Prepare distributions

    runs-on: ubuntu-latest

    steps:
    - name: Get source code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Create tarball
      run: |
        python -m pip install build setuptools wheel
        python -m build . --sdist --wheel --outdir .

    - uses: actions/upload-artifact@v2
      with:
        name: tarball
        path: dqsegdb2-*.tar.*

    - uses: actions/upload-artifact@v2
      with:
        name: wheel
        path: dqsegdb2*.whl

  distribution-test:
    # -----------------------
    # run a basic build-and-test from the tarball
    # to make sure that actually works
    #
    # Note: we don't test this on Windows because
    #       ligo-segments doesn't install cleanly
    #       from the PyPI tarball, use conda
    # -----------------------
    name: Test Python ${{ matrix.python-version }} (${{ matrix.os }})

    needs:
      - tarball
    strategy:
      matrix:
        os:
          - macOS
          - Ubuntu
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    runs-on: ${{ matrix.os }}-latest

    steps:
    - name: Download tarball
      uses: actions/download-artifact@v2
      with:
        name: tarball

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install DQSegDB2
      run: python -m pip install dqsegdb2-*.tar.*
      # need bash to resolve wildcards
      shell: bash

    - name: Install test requirements
      run: python -m pip install pytest pytest-cov requests-mock

    - name: Run test suite
      run: |
        python -m pytest -ra --verbose --pyargs dqsegdb2 --junitxml=pytest.xml
