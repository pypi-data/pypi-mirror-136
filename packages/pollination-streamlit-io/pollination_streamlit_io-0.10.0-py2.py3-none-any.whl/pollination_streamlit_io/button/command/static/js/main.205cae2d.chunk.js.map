{"version":3,"sources":["style.module.scss","RunCommand.tsx","index.tsx"],"names":["module","exports","RunCommand","state","action","commandString","commandOptions","isFocused","render","className","styles","poButton","onClick","onClicked","disabled","props","onFocus","_onFocus","onBlur","_onBlur","style","margin","src","process","alt","window","parent","chrome","webview","console","log","msgObject","args","json","JSON","stringify","postMessage","setState","prevState","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,SAAW,0B,4KCqBvBC,E,4MACGC,MAAQ,CACbC,OAAQ,aACRC,cAAe,GACfC,eAAgB,GAChBC,WAAW,G,EAENC,OAAS,WAMd,OACE,8BACE,4BACEC,UAAWC,IAAOC,SAClBC,QAAS,EAAKC,UACdC,SAAU,EAAKC,MAAMD,SACrBE,QAAS,EAAKC,SACdC,OAAQ,EAAKC,SAEb,8BACE,yBAAKC,MAdI,CACfC,OAAQ,mBAaoBC,IAAKC,wBAAiDC,IAAI,UARpF,iB,EAgBEX,UAAY,WAClB,GAAmC,oBAAxBY,OAAOC,OAAOC,OAAuB,CAC9C,GAA2C,oBAAhCF,OAAOC,OAAOC,OAAOC,QAG9B,YADAC,QAAQC,IAAI,2CAId,IAAIC,EAAY,CACd3B,OAAQ,aACRC,cAAe,EAAKU,MAAMiB,KAAX,cACf1B,eAAgB,EAAKS,MAAMiB,KAAX,gBAEdC,EAAOC,KAAKC,UAAUJ,GAC1BN,OAAOC,OAAOC,OAAOC,QAAQQ,YAAYH,GAEzC,EAAKI,UACH,SAACC,GAAD,mBAAC,eACIA,GADL,IAEElC,OAAQ2B,EAAU3B,OAClBC,cAAe0B,EAAU1B,cACzBC,eAAgByB,EAAUzB,oBAE5B,kBAAMiC,IAAUC,kBAAkB,EAAKrC,MAAMC,WAE/CyB,QAAQC,IAAI,+CAIZD,QAAQC,IAAI,2C,EAIRb,SAAW,WACjB,EAAKoB,SAAS,CAAE9B,WAAW,K,EAGrBY,QAAU,WAChB,EAAKkB,SAAS,CAAE9B,WAAW,K,yBArENkC,KAyEVC,cAAwBxC,GC3FvCyC,IAASnC,OACP,kBAAC,IAAMoC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.205cae2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"poButton\":\"style_poButton__3x8Ka\"};","import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\nimport styles from './style.module.scss';\n\ninterface State {\n  action: string\n  commandString: string\n  commandOptions: string\n  isFocused: boolean\n}\n\ndeclare global {\n  interface Window {\n    chrome: any;\n  }\n}\n\nclass RunCommand extends StreamlitComponentBase<State> {\n  public state = { \n    action: \"RunCommand\",\n    commandString: \"\", \n    commandOptions: \"\",\n    isFocused: false }\n\n  public render = (): ReactNode => {\n    \n    const imgStyle = {\n      margin: \"0px 3px 2px 0px\"\n    }\n    \n    return (\n      <span>\n        <button\n          className={styles.poButton}\n          onClick={this.onClicked}\n          disabled={this.props.disabled}\n          onFocus={this._onFocus}\n          onBlur={this._onBlur}\n        >\n          <span>\n            <img style={imgStyle} src={process.env.PUBLIC_URL + '/img/pollination.png'} alt=\"logo\" />\n          </span>\n            Run Command\n        </button>\n      </span>\n    )\n  }\n\n  private onClicked = (): void => {\n    if (typeof window.parent.chrome != \"undefined\") {\n      if (typeof window.parent.chrome.webview == \"undefined\")\n      {\n        console.log('[POLLINATION-DEBUG]: webview not found.');\n        return;\n      }\n      \n      var msgObject = {\n        action: \"RunCommand\",\n        commandString: this.props.args[\"commandString\"],\n        commandOptions: this.props.args[\"commandOptions\"]\n      };\n      var json = JSON.stringify(msgObject);\n      window.parent.chrome.webview.postMessage(json);\n\n      this.setState(\n        (prevState) => ({ \n          ...prevState, \n          action: msgObject.action,\n          commandString: msgObject.commandString,\n          commandOptions: msgObject.commandOptions\n        }),\n        () => Streamlit.setComponentValue(this.state.action)\n      );\n      console.log('[POLLINATION-DEBUG]: JSON string sent.');\n    }\n    else\n    {\n      console.log('[POLLINATION-DEBUG]: chrome not found.');\n    }\n  }\n\n  private _onFocus = (): void => {\n    this.setState({ isFocused: true })\n  }\n\n  private _onBlur = (): void => {\n    this.setState({ isFocused: false })\n  }\n}\n\nexport default withStreamlitConnection(RunCommand)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport RunCommand from \"./RunCommand\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <RunCommand />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}